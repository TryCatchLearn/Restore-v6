{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/hooks/useProducts.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","put","createFormData","item","formData","FormData","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","useProducts","products","selectAll","useEffect","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"4YAOaA,EAIT,WAAYC,EAAUC,GAAqB,yBAH3CD,WAG0C,OAF1CC,cAE0C,EACtCC,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,G,gCCRjB,SAASE,EAAeC,GAC7B,MAAO,KAAOA,EAAO,KAAKC,QAAQ,GCIpC,IAKaC,EAAmBC,YAC5B,0BAD4C,uCAE5C,WAAOC,EAAGC,GAAV,SAAAC,EAAA,+EAEqBC,GAAMC,OAAOC,MAFlC,iGAIeJ,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QAJtD,wDAF4C,wDAS5C,CACIC,UAAW,WACP,ID1BL,SAAmBC,GACxB,IAAMC,EAAIC,SAASC,OAAOC,MAAM,YAAcJ,EAAM,oBACpD,OAAOC,EAAIA,EAAEI,MAAQ,GCwBNC,CAAU,WAAY,OAAO,KAKjCC,EAAqBlB,YAC9B,4BAD8C,uCAE9C,aAAkCE,GAAlC,mBAAAC,EAAA,6DAAQgB,EAAR,EAAQA,UAAR,IAAmBC,gBAAnB,MAA8B,EAA9B,oBAEqBhB,GAAMC,OAAOgB,QAAQF,EAAWC,GAFrD,iGAIelB,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QAJtD,yDAF8C,yDAWrCa,EAAwBtB,YAEjC,+BAFiD,uCAGjD,aAA8BE,GAA9B,iBAAAC,EAAA,6DAAQgB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAnB,kBAEchB,GAAMC,OAAOkB,WAAWJ,EAAWC,GAFjD,+EAIelB,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QAJtD,wDAHiD,yDAYxCe,EAAcC,YAAY,CACnCC,KAAM,SACNC,aA9C8B,CAC9BC,OAAQ,KACRC,OAAQ,QA6CRC,SAAU,CACNC,UAAW,SAACC,EAAOC,GACfD,EAAMJ,OAASK,EAAOC,SAE1BC,YAAa,SAACH,GACVA,EAAMJ,OAAS,OAGvBQ,cAAgB,SAAAC,GACZA,EAAQC,QAAQpB,EAAmBqB,SAAS,SAACP,EAAOC,GAChDD,EAAMH,OAAS,iBAAmBI,EAAOO,KAAKC,IAAItB,aAEtDkB,EAAQC,QAAQhB,EAAsBiB,SAAS,SAACP,EAAOC,GACnDD,EAAMH,OAAS,oBAAsBI,EAAOO,KAAKC,IAAItB,UAAYc,EAAOO,KAAKC,IAAIf,QAErFW,EAAQC,QAAQhB,EAAsBoB,WAAW,SAACV,EAAOC,GAAY,IAAD,IAChE,EAA8BA,EAAOO,KAAKC,IAAnCtB,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,SACZuB,EAAS,UAAGX,EAAMJ,cAAT,aAAG,EAAcnC,MAAMmD,WAAU,SAAAC,GAAC,OAAIA,EAAE1B,YAAcA,MAClD,IAAfwB,QAAkCG,IAAdH,IACxBX,EAAMJ,OAAQnC,MAAMkD,GAAWvB,UAAYA,EACK,KAA5C,UAAAY,EAAMJ,cAAN,eAAcnC,MAAMkD,GAAWvB,WAC/BY,EAAMJ,OAAOnC,MAAMsD,OAAOJ,EAAW,GACzCX,EAAMH,OAAS,WAEnBQ,EAAQC,QAAQhB,EAAsB0B,UAAU,SAAChB,EAAOC,GACpDgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,UAEnBQ,EAAQc,WAAWC,YAAQlC,EAAmBwB,UAAW3C,EAAiB2C,YAAY,SAACV,EAAOC,GAC1FD,EAAMJ,OAASK,EAAOC,QACtBF,EAAMH,OAAS,UAEnBQ,EAAQc,WAAWC,YAAQlC,EAAmB8B,SAAUjD,EAAiBiD,WAAW,SAAChB,EAAOC,GACxFgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,aAKpB,EAAiCL,EAAY6B,QAAtCtB,EAAP,EAAOA,UAAWI,EAAlB,EAAkBA,Y,0BChFZmB,EAAatD,YACtB,qBADsC,uCAEtC,WAAOS,EAAMP,GAAb,mBAAAC,EAAA,+EAE8BC,GAAMmD,QAAQC,MAAM/C,GAFlD,cAEcgD,EAFd,OAGe7B,EAAmB6B,EAAnB7B,OAAW8B,EAH1B,YAGkCD,EAHlC,GAIY7B,GAAQ1B,EAASyD,SAAS5B,EAAUH,IACxCgC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,IALpD,kBAMeA,GANf,2DAQexD,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QARtD,0DAFsC,yDAe7BuD,EAAmBhE,YAC5B,2BAD4C,uCAE5C,WAAOC,EAAGC,GAAV,mBAAAC,EAAA,6DACID,EAASyD,SAASM,EAAQH,KAAKI,MAAMN,aAAaO,QAAQ,WAD9D,kBAG8B/D,GAAMmD,QAAQa,cAH5C,cAGcX,EAHd,OAIe7B,EAAmB6B,EAAnB7B,OAAW8B,EAJ1B,YAIkCD,EAJlC,GAKY7B,GAAQ1B,EAASyD,SAAS5B,EAAUH,IACxCgC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,IANpD,kBAOeA,GAPf,2DASexD,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QATtD,0DAF4C,wDAc5C,CACIC,UAAW,WACP,IAAKkD,aAAaO,QAAQ,QAAS,OAAO,KAKzCE,EAAe5C,YAAY,CACpCC,KAAM,UACNC,aA1C+B,CAC/B+B,KAAM,MA0CN5B,SAAU,CACNwC,QAAS,SAACtC,GACNA,EAAM0B,KAAO,KACbE,aAAarC,WAAW,QACxBgD,GAAQC,KAAK,MAEjBP,QAAS,SAACjC,EAAOC,GACb,IACIwC,EADSX,KAAKI,MAAMQ,KAAKzC,EAAOC,QAAQyC,MAAMC,MAAM,KAAK,KAC1C,gEACnB5C,EAAM0B,KAAN,2BAAiBzB,EAAOC,SAAxB,IAAiCuC,MAAyB,kBAAXA,EAAsB,CAACA,GAASA,MAGvFrC,cAAgB,SAAAC,GACZA,EAAQC,QAAQ0B,EAAiBhB,UAAU,SAAChB,GACxCA,EAAM0B,KAAO,KACbE,aAAarC,WAAW,QACxBsD,IAAMrE,MAAM,wCACZ+D,GAAQC,KAAK,QAEjBnC,EAAQc,WAAWC,YAAQE,EAAWZ,UAAWsB,EAAiBtB,YAAY,SAACV,EAAOC,GAClF,IACIwC,EADSX,KAAKI,MAAMQ,KAAKzC,EAAOC,QAAQyC,MAAMC,MAAM,KAAK,KAC1C,gEACnB5C,EAAM0B,KAAN,2BAAiBzB,EAAOC,SAAxB,IAAiCuC,MAAyB,kBAAXA,EAAsB,CAACA,GAASA,OAEnFpC,EAAQc,WAAWC,YAAQE,EAAWN,WAAW,SAAChB,EAAOC,GACrD,MAAMA,EAAOC,cAKlB,EAA2BmC,EAAahB,QAAjCiB,EAAP,EAAOA,QAASL,EAAhB,EAAgBA,QCrEjBa,EAAkBC,cAExB,SAASC,EAAeC,GACpB,IAAMC,EAAS,IAAIC,gBAOnB,OANAD,EAAOE,OAAO,aAAcH,EAAcI,WAAWC,YACrDJ,EAAOE,OAAO,WAAYH,EAAcM,SAASD,YACjDJ,EAAOE,OAAO,UAAWH,EAAcO,SACnCP,EAAcQ,YAAYP,EAAOE,OAAO,aAAcH,EAAcQ,YACpER,EAAcS,OAAOC,OAAS,GAAGT,EAAOE,OAAO,SAAUH,EAAcS,OAAOJ,YAC9EL,EAAcW,MAAMD,OAAS,GAAGT,EAAOE,OAAO,QAASH,EAAcW,MAAMN,YACxEJ,EAGJ,IAAMW,EAAqB7F,YAC9B,6BAD8C,uCAE9C,WAAOC,EAAGC,GAAV,iBAAAC,EAAA,6DACU+E,EAASF,EAAe9E,EAAS4F,WAAWC,QAAQd,eAD9D,kBAG+B7E,GAAM4F,QAAQC,KAAKf,GAHlD,cAGcgB,EAHd,OAIQhG,EAASyD,SAASwC,GAAYD,EAASxG,WAJ/C,kBAKewG,EAASzG,OALxB,yDAOeS,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QAPtD,yDAF8C,yDAcrC2F,EAAoBpG,YAC7B,4BAD6C,uCAE7C,WAAOmB,EAAWjB,GAAlB,SAAAC,EAAA,+EAEqBC,GAAM4F,QAAQK,QAAQlF,GAF3C,iGAIejB,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QAJtD,wDAF6C,yDAWpC6F,EAAetG,YACxB,uBADwC,uCAExC,WAAOC,EAAGC,GAAV,SAAAC,EAAA,wFAEeC,GAAM4F,QAAQM,gBAF7B,yDAIepG,EAASK,gBAAgB,CAACC,MAAO,KAAMC,QAJtD,wDAFwC,yDAqBrC,IAAM8F,GAAe9E,YAAY,CACpCC,KAAM,UACNC,aAAcmD,EAAgB0B,gBAA8B,CACxDC,gBAAgB,EAChBC,eAAe,EACf7E,OAAQ,OACR6D,OAAQ,GACRE,MAAO,GACPX,cAjBG,CACHI,WAAY,EACZE,SAAU,EACVC,QAAS,OACTE,OAAQ,GACRE,MAAO,IAaPlG,SAAU,OAEdoC,SAAU,CACN6E,iBAAkB,SAAC3E,EAAOC,GACtBD,EAAMyE,gBAAiB,EACvBzE,EAAMiD,cAAN,uCAA0BjD,EAAMiD,eAAkBhD,EAAOC,SAAzD,IAAkEmD,WAAY,KAElFuB,cAAe,SAAC5E,EAAOC,GACnBD,EAAMyE,gBAAiB,EACvBzE,EAAMiD,cAAN,2BAA0BjD,EAAMiD,eAAkBhD,EAAOC,UAE7DiE,YAAa,SAACnE,EAAOC,GACjBD,EAAMtC,SAAWuC,EAAOC,SAE5B2E,mBAAoB,SAAC7E,GACjBA,EAAMiD,cAjCP,CACHI,WAAY,EACZE,SAAU,EACVC,QAAS,OACTE,OAAQ,GACRE,MAAO,KA8BPkB,WAAY,SAAC9E,EAAOC,GAChB6C,EAAgBiC,UAAU/E,EAAOC,EAAOC,SACxCF,EAAMyE,gBAAiB,GAE3BO,cAAe,SAAChF,EAAOC,GACnB6C,EAAgBmC,UAAUjF,EAAOC,EAAOC,SACxCF,EAAMyE,gBAAiB,IAG/BrE,cAAgB,SAAAC,GACZA,EAAQC,QAAQuD,EAAmBtD,SAAS,SAACP,GACzCA,EAAMH,OAAS,0BAEnBQ,EAAQC,QAAQuD,EAAmBnD,WAAW,SAACV,EAAOC,GAClD6C,EAAgBoC,OAAOlF,EAAOC,EAAOC,SACrCF,EAAMH,OAAS,OACfG,EAAMyE,gBAAiB,KAE3BpE,EAAQC,QAAQuD,EAAmB7C,UAAU,SAAChB,EAAOC,GACjDgB,QAAQC,IAAIjB,EAAOC,SACnBF,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQ8D,EAAkB7D,SAAS,SAACP,GACxCA,EAAMH,OAAS,yBAEnBQ,EAAQC,QAAQ8D,EAAkB1D,WAAW,SAACV,EAAOC,GACjD6C,EAAgBiC,UAAU/E,EAAOC,EAAOC,SACxCF,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQ8D,EAAkBpD,UAAU,SAAChB,EAAOC,GAChDgB,QAAQC,IAAIjB,GACZD,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQgE,EAAa/D,SAAS,SAACP,GACnCA,EAAMH,OAAS,yBAEnBQ,EAAQC,QAAQgE,EAAa5D,WAAW,SAACV,EAAOC,GAC5CD,EAAM0D,OAASzD,EAAOC,QAAQwD,OAC9B1D,EAAM4D,MAAQ3D,EAAOC,QAAQ0D,MAC7B5D,EAAM0E,eAAgB,EACtB1E,EAAMH,OAAS,UAEnBQ,EAAQC,QAAQgE,EAAatD,UAAU,SAAChB,EAAOC,GAC3CD,EAAMH,OAAS,OACfoB,QAAQC,IAAIjB,EAAOC,eAKlBiF,GAAmBrC,EAAgBsC,cAAa,SAACpF,GAAD,OAAsBA,EAAM+D,WAElF,GAAsGQ,GAAalD,QAA5GsD,GAAP,GAAOA,iBAAsCR,IAA7C,GAAyBU,mBAAzB,GAA6CV,aAAaS,GAA1D,GAA0DA,cAAeE,GAAzE,GAAyEA,WAAYE,GAArF,GAAqFA,cC5I/EK,GAAe5F,YAAY,CACpCC,KAAM,UACNC,aAP+B,CAC/BlB,KAAM,GACN6G,MAAO,uDAMPxF,SAAU,CACNyF,UAAW,SAACvF,EAAOC,GACfD,EAAMvB,MAAQwB,EAAOC,SAEzBsF,UAAW,SAACxF,EAAOC,GACfD,EAAMvB,MAAQwB,EAAOC,YAK1B,GAA+BmF,GAAahE,QAArCkE,GAAP,GAAOA,UAAWC,GAAlB,GAAkBA,UCdZC,GAAQC,YAAe,CACpCC,QAAS,CACDC,QAASP,GAAaM,QACtB/F,OAAQJ,EAAYmG,QACpB5B,QAASQ,GAAaoB,QACtBE,QAASxD,EAAasD,WAOjBG,GAAiB,kBAAMC,eACvBC,GAAkDC,IChB/DC,IAAMC,SAASC,QAAUC,QACzBH,IAAMC,SAASG,iBAAkB,EAEjC,IAAMC,GAAe,SAACrC,GAAD,OAA6BA,EAASzF,MAE3DyH,IAAMM,aAAaC,QAAQC,KAAI,SAAAC,GAAW,IAAD,EAC/BhE,EAAK,UAAG8C,GAAM3B,WAAW+B,QAAQnE,YAA5B,aAAG,EAA+BiB,MAE7C,OADIA,IAAOgE,EAAOC,QAAQC,cAAf,iBAAyClE,IAC7CgE,KAGXT,IAAMM,aAAatC,SAASwC,IAA5B,+BAAAvI,EAAA,MAAgC,WAAM+F,GAAN,eAAA/F,EAAA,iFAEtB2I,EAAa5C,EAAS0C,QAAT,YAFS,uBAIxB1C,EAASzF,KAAO,IAAIjB,EAAkB0G,EAASzF,KAAMqD,KAAKI,MAAM4E,IAJxC,kBAKjB5C,GALiB,gCAOrBA,GAPqB,2CAAhC,uDAQG,SAAC1F,GACA,MAAyBA,EAAM0F,SAAvBzF,EAAR,EAAQA,KACR,OADA,EAAcoB,QAEV,KAAK,IACD,GAAIpB,EAAKsI,OAAQ,CACb,IAAMC,EAA6B,GACnC,IAAK,IAAMrI,KAAOF,EAAKsI,OACftI,EAAKsI,OAAOpI,IACZqI,EAAiBxE,KAAK/D,EAAKsI,OAAOpI,IAG1C,MAAMqI,EAAiBC,OAE3BpE,IAAMrE,MAAMC,EAAK6G,OACjB,MACJ,KAAK,IACDzC,IAAMrE,MAAMC,EAAK6G,OACjB,MACJ,KAAK,IACDzC,IAAMrE,MAAM,mCACZ,MACJ,KAAK,IACD+D,GAAQC,KAAK,CACT0E,SAAU,gBACVlH,MAAO,CAACxB,MAAOC,KAM3B,OAAO0I,QAAQC,OAAO5I,EAAM0F,aAGhC,IAAMmD,GACG,SAACC,EAAapE,GAAd,OAA2CgD,IAAM5H,IAAIgJ,EAAK,CAACpE,WAASqE,KAAKhB,KAD5Ec,GAEI,SAACC,EAAaE,GAAd,OAA2BtB,IAAMuB,KAAKH,EAAKE,GAAMD,KAAKhB,KAF1Dc,GAIM,SAACC,GAAD,OAAiBpB,IAAMwB,OAAOJ,GAAKC,KAAKhB,KAJ9Cc,GAKQ,SAACC,EAAa7I,GAAd,OAAiCyH,IAAMuB,KAAKH,EAAK7I,EAAM,CAC7DmI,QAAS,CAAC,eAAgB,yBAC3BW,KAAKhB,KAPNc,GAQO,SAACC,EAAa7I,GAAd,OAAiCyH,IAAMyB,IAAIL,EAAK7I,EAAM,CAC3DmI,QAAS,CAAC,eAAgB,yBAC3BW,KAAKhB,KAGZ,SAASqB,GAAeC,GACpB,IAAIC,EAAW,IAAIC,SACnB,IAAK,IAAMpJ,KAAOkJ,EACdC,EAAS1E,OAAOzE,EAAKkJ,EAAKlJ,IAE9B,OAAOmJ,EAGX,IAoBMzJ,GAAS,CACXC,IAAK,kBAAM+I,GAAa,WACxBhI,QAAS,SAACF,GAAD,IAAoBC,EAApB,uDAA+B,EAA/B,OAAqCiI,GAAA,2BAAkClI,EAAlC,qBAAwDC,GAAY,KAClHG,WAAY,SAACJ,GAAD,IAAoBC,EAApB,uDAA+B,EAA/B,OAAqCiI,GAAA,2BAAoClI,EAApC,qBAA0DC,MA8BhGhB,GAVD,CACV4F,QAtCY,CACZC,KAAM,SAACf,GAAD,OAA6BmE,GAAa,WAAYnE,IAC5DmB,QAAS,SAAC2D,GAAD,OAAgBX,GAAA,mBAAyBW,KAClD1D,aAAc,kBAAM+C,GAAa,sBAoCjCY,WAjCe,CACfC,YAAa,kBAAMb,GAAa,sBAChCc,YAAa,kBAAMd,GAAa,uBAChCe,YAAa,kBAAMf,GAAa,oBAChCgB,YAAa,kBAAMhB,GAAa,uBAChCiB,mBAAoB,kBAAMjB,GAAa,4BA6BvChJ,UACAkD,QArBY,CACZC,MAAO,SAAC+G,GAAD,OAAiBlB,GAAc,gBAAiBkB,IACvDC,SAAU,SAACD,GAAD,OAAiBlB,GAAc,mBAAoBkB,IAC7DnG,YAAa,kBAAMiF,GAAa,wBAChCoB,aAAc,kBAAMpB,GAAa,0BAkBjCqB,OAfW,CACXzE,KAAM,kBAAMoD,GAAa,WACzBsB,MAAO,SAACX,GAAD,OAAgBX,GAAA,iBAAuBW,KAC9CY,OAAQ,SAACL,GAAD,OAAiBlB,GAAc,SAAUkB,KAajDM,SAVa,CACbC,oBAAqB,kBAAMzB,GAAc,WAAY,MAUrD0B,MAlDU,CACVC,cAAe,SAACC,GAAD,OAAkB5B,GAAkB,WAAYO,GAAeqB,KAC9EC,cAAe,SAACD,GAAD,OAAkB5B,GAAiB,WAAYO,GAAeqB,KAC7EE,cAAe,SAACnB,GAAD,OAAgBX,GAAA,mBAA4BW,O,QChFhD,SAASoB,KACpB,MAAgDC,mBAAmB,IAAnE,mBAAOC,EAAP,KAAyBC,EAAzB,KAQA,OACI,gBAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAjC,yCACA,gBAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACI,eAACC,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWC,cAAc8B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWE,cAAc6B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWG,cAAc4B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS,kBAAM3L,GAAM6J,WAAWI,cAAc2B,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,OAArG,4BACA,eAACsL,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAdxC,WACI3L,GAAM6J,WAAWK,qBACZf,MAAK,kBAAMtG,QAAQC,IAAI,0BACvB8I,OAAM,SAAAxL,GAAK,OAAI+K,EAAoB/K,OAWhC,sCAEH8K,EAAiB3F,OAAS,GACvB,gBAACsG,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACI,eAACC,EAAA,EAAD,gCACA,eAACC,EAAA,EAAD,UACKd,EAAiBe,KAAI,SAAA7L,GAAK,OACvB,eAAC8L,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,UAAe/L,KADJA,c,4CClB5B,SAASgM,GAAT,GAAyD,IAAjC9M,EAAgC,EAAhCA,SAAU+M,EAAsB,EAAtBA,aACtCC,EAAiDhN,EAAjDgN,YAAaC,EAAoCjN,EAApCiN,WAAYC,EAAwBlN,EAAxBkN,WAAYrH,EAAY7F,EAAZ6F,SAC5C,EAAoC8F,mBAASqB,GAA7C,mBAAOrH,EAAP,KAAmBuB,EAAnB,KAOA,OACI,gBAACiG,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAA9D,UACI,gBAACvB,EAAA,EAAD,0BACiBiB,EAAY,GAAGnH,EAAS,EADzC,IAEKmH,EAAYnH,EAAWoH,EAClBA,EACAD,EAAYnH,EAJtB,OAIoCoH,EAJpC,YAMA,eAACM,GAAA,EAAD,CACIC,MAAM,YACNC,KAAK,QACLC,MAAOR,EACPS,KAAMhI,EACNiI,SAAU,SAACC,EAAGF,GAAJ,OAlBtB,SAA0BA,GACtBzG,EAAcyG,GACdZ,EAAaY,GAgBkBG,CAAiBH,S,2CCvBzC,SAASI,GAAT,GAA6D,IAAnChO,EAAkC,EAAlCA,MAAOiO,EAA2B,EAA3BA,QAASJ,EAAkB,EAAlBA,SACrD,EAAwCjC,mBAASqC,GAAW,IAA5D,mBAAOC,EAAP,KAAqBC,EAArB,KAWA,OACI,eAACC,GAAA,EAAD,UACKpO,EAAM4M,KAAI,SAAAxC,GAAI,OACX,eAACiE,GAAA,EAAD,CACIC,QAAS,eAACC,GAAA,EAAD,CACLN,SAAyC,IAAhCC,EAAaM,QAAQpE,GAC9BkC,QAAS,kBAf7B,SAAuBmC,GACnB,IACIC,EAAuB,GACFA,GAAH,IAFDR,EAAa/K,WAAU,SAAAiH,GAAI,OAAIA,IAASqE,KAE1B,uBAAOP,GAAP,CAAqBO,IACtCP,EAAaS,QAAO,SAAAvE,GAAI,OAAIA,IAASqE,KACvDN,EAAgBO,GAChBb,EAASa,GASsBE,CAAcxE,MAEjCyE,MAAOzE,GACFA,Q,kCCtBV,SAAS0E,GAAT,GAAsE,IAA3CC,EAA0C,EAA1CA,QAASlB,EAAiC,EAAjCA,SAAUmB,EAAuB,EAAvBA,cACzD,OACI,eAACC,GAAA,EAAD,CAAaC,UAAU,WAAvB,SACI,eAACC,GAAA,EAAD,CAAYtB,SAAUA,EAAUY,MAAOO,EAAvC,SACKD,EAAQnC,KAAI,gBAAG6B,EAAH,EAAGA,MAAOI,EAAV,EAAUA,MAAV,OACT,eAACR,GAAA,EAAD,CAAkBI,MAAOA,EAAOH,QAAS,eAACc,GAAA,EAAD,IAAWP,MAAOA,GAAYJ,UCT5E,SAASY,KACpB,IAAMC,EAAW/G,GAAeb,GAAiB6H,WACjD,EAAmEhH,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAzFU,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,cAAehB,EAAvC,EAAuCA,OAAQE,EAA/C,EAA+CA,MAAOlG,EAAtD,EAAsDA,SAChDiE,EAAWmE,KAUjB,OARAmH,qBAAU,WACDxI,GAAgB9C,EAASkC,OAC/B,CAACY,EAAgB9C,IAEpBsL,qBAAU,WACDvI,GAAe/C,EAAS2C,OAC9B,CAACI,EAAe/C,IAEZ,CACHoL,WACAtI,iBACAC,gBACAhB,SACAE,QACAlG,Y,wBChBO,SAASwP,GAAT,GAA4D,IAAD,IAAhCC,eAAgC,MAAtB,aAAsB,EACtE,OACI,eAACC,GAAA,EAAD,CAAUC,MAAM,EAAMC,WAAW,EAAjC,SACI,gBAACzC,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAASuC,OAAO,QAAvE,UACI,eAACC,GAAA,EAAD,CAAkBrC,KAAM,IAAKD,MAAM,cACnC,eAACzB,EAAA,EAAD,CAAYE,QAAQ,KAAK8D,GAAI,CAAC1C,eAAgB,SAAU2C,SAAU,QAASC,IAAK,OAAhF,SACKR,S,mFCDN,SAASS,GAAT,GAA0C,IAAnB3E,EAAkB,EAAlBA,QAC3BpJ,EAAUmG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAxCC,OACD8B,EAAWmE,KAEjB,OACI,gBAAC+H,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CACIC,OACI,eAACC,GAAA,EAAD,CAAQP,GAAI,CAAEQ,QAAS,kBAAvB,SACKhF,EAAQvJ,KAAKwO,OAAO,GAAGC,gBAGhC7I,MAAO2D,EAAQvJ,KACf0O,qBAAsB,CAClBX,GAAI,CAAEY,WAAY,OAAQnD,MAAO,mBAGzC,eAACoD,GAAA,EAAD,CACIb,GAAI,CAAEF,OAAQ,IAAKgB,eAAgB,UAAWN,QAAS,iBACvDO,MAAOvF,EAAQwF,WACfnJ,MAAO2D,EAAQvJ,OAEnB,gBAACgP,GAAA,EAAD,WACI,eAACjF,EAAA,EAAD,CAAYC,cAAY,EAACwB,MAAM,YAAYvB,QAAQ,KAAnD,SACK/L,EAAeqL,EAAQ0F,SAE5B,gBAAClF,EAAA,EAAD,CAAYE,QAAQ,QAAQuB,MAAM,iBAAlC,UACKjC,EAAQ2F,MADb,MACuB3F,EAAQ4F,WAGnC,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CACIC,QAASnP,EAAOoP,SAAS,iBAAmBhG,EAAQjB,IACpD+B,QAAS,kBAAMpI,EAASzC,EAAmB,CAACC,UAAW8J,EAAQjB,OAC/DmD,KAAK,QAHT,yBAMA,eAACrB,EAAA,EAAD,CAAQ6C,UAAWuC,KAAMC,GAAE,mBAAclG,EAAQjB,IAAMmD,KAAK,QAA5D,wB,cCxCD,SAASiE,KACpB,OACI,gBAACC,GAAA,EAAD,CAAMxH,MAAI,EAACyH,IAAE,EAAC3C,UAAWkB,KAAzB,UACI,eAACC,GAAA,EAAD,CACIC,OACI,eAACwB,GAAA,EAAD,CAAUC,UAAU,OAAO7F,QAAQ,WAAW8F,MAAO,GAAIlC,OAAQ,KAErEjI,MACI,eAACiK,GAAA,EAAD,CACIC,UAAU,OACVjC,OAAQ,GACRkC,MAAM,MACNC,MAAO,CAAEC,aAAc,OAInC,eAACJ,GAAA,EAAD,CAAU9B,GAAI,CAAEF,OAAQ,KAAOiC,UAAU,OAAO7F,QAAQ,gBACxD,eAAC+E,GAAA,EAAD,UACI,uCACI,eAACa,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAImC,MAAO,CAAEC,aAAc,KAC9D,eAACJ,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAIkC,MAAM,aAGrD,eAACX,GAAA,EAAD,UACI,uCACI,eAACS,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAIkC,MAAM,QAC7C,eAACF,GAAA,EAAD,CAAUC,UAAU,OAAOjC,OAAQ,GAAIkC,MAAM,gBCzBlD,SAASG,GAAT,GAA2C,IAApB7C,EAAmB,EAAnBA,SAC1BtI,EAAmBuB,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAjDU,eACR,OACI,eAAC4K,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,SACK/C,EAAS1C,KAAI,SAAApB,GAAO,OACjB,eAACoG,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACM7K,EAGE,eAACmJ,GAAD,CAAa3E,QAASA,IAFtB,eAACmG,GAAD,KAFenG,EAAQjB,S,uBCVhC,SAAS+H,KACpB,IAAO9M,EAAiB+C,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAA/Cd,cACP,EAAoCoG,mBAASpG,EAAcQ,YAA3D,mBAAOA,EAAP,KAAmBuM,EAAnB,KACMrO,EAAWmE,KAEXmK,EAAkBC,cAAS,SAACC,GAC9BxO,EAASgD,GAAiB,CAAClB,WAAY0M,EAAMC,OAAOlE,WACrD,KAEH,OACI,eAACmE,GAAA,EAAD,CACI/D,MAAM,kBACN3C,QAAQ,WACRE,WAAS,EACTqC,MAAOzI,GAAc,GACrB6H,SAAU,SAAC6E,GACPH,EAAcG,EAAMC,OAAOlE,OAC3B+D,EAAgBE,MCXhC,IAAMG,GAAc,CAChB,CAAEpE,MAAO,OAAQI,MAAO,gBACxB,CAAEJ,MAAO,YAAaI,MAAO,uBAC7B,CAAEJ,MAAO,QAASI,MAAO,wBAGd,SAAStI,KACpB,MAA2D8I,KAApDC,EAAP,EAAOA,SAAUrJ,EAAjB,EAAiBA,OAAQE,EAAzB,EAAyBA,MAAOc,EAAhC,EAAgCA,cAAehH,EAA/C,EAA+CA,SACvCuF,EAAoB+C,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAlDd,cACFtB,EAAWmE,KAEjB,OAAKpB,EAGD,gBAAC2K,GAAA,EAAD,CAAMQ,WAAS,EAACU,cAAe,EAA/B,UACI,gBAAClB,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,UACI,eAACkB,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,GAAjB,SACI,eAACV,GAAD,MAEJ,eAACS,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,EAAGC,EAAG,GAAvB,SACI,eAACnE,GAAD,CACIE,cAAexJ,EAAcO,QAC7BgJ,QAAS8D,GACThF,SAAU,SAACC,GAAD,OAAO5J,EAASgD,GAAiB,CAAEnB,QAAS+H,EAAE6E,OAAOlE,cAGvE,eAACsE,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,EAAGC,EAAG,GAAvB,SACI,eAACjF,GAAD,CACIhO,MAAOiG,EACPgI,QAASzI,EAAcS,OACvB4H,SAAU,SAAC7N,GAAD,OAAqBkE,EAASgD,GAAiB,CAAEjB,OAAQjG,UAG3E,eAAC+S,GAAA,EAAD,CAAO/C,GAAI,CAAEgD,GAAI,EAAGC,EAAG,GAAvB,SACI,eAACjF,GAAD,CACIhO,MAAOmG,EACP8H,QAASzI,EAAcW,MACvB0H,SAAU,SAAC7N,GAAD,OAAqBkE,EAASgD,GAAiB,CAAEf,MAAOnG,aAI9E,eAAC4R,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACM,GAAD,CAAa7C,SAAUA,MAE3B,eAACsC,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,eAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAG7B,GAAI,CAACgD,GAAI,GAA3B,SACK/S,GACD,eAAC8M,GAAD,CACI9M,SAAUA,EACV+M,aAAc,SAACY,GAAD,OAAkB1J,EAASiD,GAAc,CAACvB,WAAYgI,aAtCzD,eAAC6B,GAAD,CAAkBC,QAAQ,wB,gECnB1C,SAASwD,KACpB,OACI,gBAACnH,EAAA,EAAD,CAAWmD,UAAW6D,KAAO/C,GAAI,CAACF,OAAQ,KAA1C,UACI,eAAC9D,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAjC,+DACA,eAACiH,GAAA,EAAD,IACA,eAAC9G,EAAA,EAAD,CAAQD,WAAS,EAAC8C,UAAWuC,KAAMC,GAAG,WAAtC,gCCEG,SAAS0B,KACpB,MAAyB7K,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAhDA,EAAP,EAAOA,OAAQC,EAAf,EAAeA,OACT8B,EAAWmE,KACVkC,EAAM8I,cAAN9I,GACDiB,EAAUjD,IAAe,SAAAhG,GAAK,OAAImF,GAAiB4L,WAAW/Q,EAAOgI,MAC5DgJ,EAAiBhL,IAAe,SAAAhG,GAAK,OAAIA,EAAM+D,WAAvDlE,OACP,EAAgCwJ,mBAAS,GAAzC,mBAAOjK,EAAP,KAAiB6R,EAAjB,KACMpJ,EAAI,OAAGjI,QAAH,IAAGA,OAAH,EAAGA,EAAQnC,MAAMyT,MAAK,SAAArQ,GAAC,OAAIA,EAAE1B,aAAF,OAAgB8J,QAAhB,IAAgBA,OAAhB,EAAgBA,EAASjB,OAuB9D,OArBAiF,qBAAU,WACFpF,GAAMoJ,EAAYpJ,EAAKzI,UACtB6J,GAAStH,EAASyC,EAAkB+M,SAASnJ,OACnD,CAACA,EAAIH,EAAMlG,EAAUsH,IAkBpB+H,EAAc/B,SAAS,WAAmB,eAAC/B,GAAD,CAAkBC,QAAQ,uBAEnElE,EAGD,gBAACoG,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,sBAAK8B,IAAKnI,EAAQwF,WAAY4C,IAAKpI,EAAQvJ,KAAMgQ,MAAO,CAACD,MAAO,YAEpE,gBAACJ,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,UACI,eAAC7F,EAAA,EAAD,CAAYE,QAAQ,KAApB,SAA0BV,EAAQvJ,OAClC,eAACkR,GAAA,EAAD,CAASnD,GAAI,CAACgD,GAAI,KAClB,gBAAChH,EAAA,EAAD,CAAYE,QAAQ,KAAKuB,MAAM,YAA/B,eAA8CjC,EAAQ0F,MAAQ,KAAK7Q,QAAQ,MAC3E,eAACwT,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UAAYzI,EAAQvJ,UAExB,gBAAC+R,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,0BACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ0I,iBAExB,gBAACF,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ4F,UAExB,gBAAC4C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ2F,WAExB,gBAAC6C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,gCACA,eAACA,GAAA,EAAD,UAAYzI,EAAQ2I,4BAKpC,gBAACvC,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACe,GAAA,EAAD,CACI1G,QAAQ,WACRkF,KAAK,SACLvC,MAAM,mBACNzC,WAAS,EACTqC,MAAO9M,EACPkM,SA/DxB,SAA2B6E,GACnBA,EAAMC,OAAOlE,MAAQ,GACrB+E,EAAYE,SAAShB,EAAMC,OAAOlE,aAgE1B,eAACmD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACP,GAAA,EAAD,CACI8C,UAAc,OAAJhK,QAAI,IAAJA,OAAA,EAAAA,EAAMzI,YAAaA,EAC7B4P,QAASnP,EAAOoP,SAAS,WACzBlF,QAhExB,WACI,IAAKlC,GAAQzI,EAAWyI,EAAKzI,SAAU,CACnC,IAAM0S,EAAkBjK,EAAOzI,EAAWyI,EAAKzI,SAAWA,EAC1DuC,EAASzC,EAAmB,CAACC,UAAS,OAAE8J,QAAF,IAAEA,OAAF,EAAEA,EAASjB,GAAK5I,SAAU0S,SAC7D,CACH,IAAMA,EAAkBjK,EAAKzI,SAAWA,EACxCuC,EAASrC,EAAsB,CAACH,UAAS,OAAE8J,QAAF,IAAEA,OAAF,EAAEA,EAASjB,GAAK5I,SAAU0S,OA2DnDrE,GAAI,CAACF,OAAQ,QACbrC,MAAM,UACNC,KAAK,QACLxB,QAAQ,YACRE,WAAS,EARb,SAUKhC,EAAO,kBAAoB,2BA3D/B,eAAC8I,GAAD,ICtCV,SAASoB,KACpB,IAAMpQ,EAAWmE,KACjB,EAAwBE,IAAe,SAAAhG,GAAK,OAAIA,EAAM4F,WAA9CnH,EAAR,EAAQA,KAAM6G,EAAd,EAAcA,MAEd,OACI,uCACI,eAACmE,EAAA,EAAD,CAAYE,QAAQ,KAApB,SACKrE,IAEL,gBAACmE,EAAA,EAAD,CAAYE,QAAQ,KAApB,0BACkBlL,KAElB,gBAACmL,EAAA,EAAD,WACI,eAACE,EAAA,EAAD,CAAQC,QAAS,kBAAMpI,EAAS6D,GAAU,KAAKmE,QAAQ,YAAYuB,MAAM,QAAzE,uBACA,eAACpB,EAAA,EAAD,CAAQC,QAAS,kBAAMpI,EAAS4D,GAAU,KAAKoE,QAAQ,YAAYuB,MAAM,UAAzE,uBACA,eAACpB,EAAA,EAAD,CAAQC,QAAS,kBAAMpI,EAAS4D,GAAU,KAAKoE,QAAQ,YAAYuB,MAAM,YAAzE,kC,mCChBD,SAAS8G,KASpB,OACI,uCACI,gBAAC,KAAD,2BAVS,CACbC,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,IAKZ,cACI,+BACI,sBAAKjB,IAAI,oBAAoBC,IAAI,OAAO3B,MAAO,CAAC5E,QAAS,QAAS2E,MAAO,OAAQ6C,UAAW,SAEhG,+BACI,sBAAKlB,IAAI,oBAAoBC,IAAI,OAAO3B,MAAO,CAAC5E,QAAS,QAAS2E,MAAO,OAAQ6C,UAAW,SAEhG,+BACI,sBAAKlB,IAAI,oBAAoBC,IAAI,OAAO3B,MAAO,CAAC5E,QAAS,QAAS2E,MAAO,OAAQ6C,UAAW,aAGpG,eAAC,KAAD,CAAKxH,QAAQ,OAAOC,eAAe,SAAS0C,GAAI,CAACiD,EAAG,GAApD,SACI,eAACjH,EAAA,EAAD,CAAYE,QAAQ,KAApB,uC,8FCnBD,SAAS4I,KACpB,IAAM5Q,EAAWmE,KACTpE,EAASsE,IAAe,SAAAhG,GAAK,OAAIA,EAAM6F,WAAvCnE,KACR,EAAgC8Q,IAAMnJ,SAAS,MAA/C,mBAAOoJ,EAAP,KAAiBC,EAAjB,KACMrF,EAAOsF,QAAQF,GAIfG,EAAc,WAChBF,EAAY,OAGhB,OACI,uCACI,eAAC5I,EAAA,EAAD,CACIoB,MAAM,UACNnB,QAXQ,SAACoG,GACjBuC,EAAYvC,EAAM0C,gBAWVpF,GAAI,CAAEqF,WAAY,MAHtB,gBAKKpR,QALL,IAKKA,OALL,EAKKA,EAAMqR,QAEX,gBAACC,GAAA,EAAD,CACIP,SAAUA,EACVpF,KAAMA,EACN4F,QAASL,EACTM,oBAAqBC,KAJzB,UAMI,eAACC,GAAA,EAAD,CAAUrJ,QAAS6I,EAAnB,qBACA,eAACQ,GAAA,EAAD,CAAUzG,UAAWuC,KAAMC,GAAG,UAA9B,uBACA,eAACiE,GAAA,EAAD,CAAUrJ,QAAS,WACfpI,EAASW,KACTX,EAASxB,MAFb,0BCzBhB,IAAMkT,GAAW,CACb,CAAE/N,MAAO,UAAWgO,KAAM,YAC1B,CAAEhO,MAAO,QAASgO,KAAM,UACxB,CAAEhO,MAAO,UAAWgO,KAAM,aAGxBC,GAAa,CACf,CAAEjO,MAAO,QAASgO,KAAM,UACxB,CAAEhO,MAAO,WAAYgO,KAAM,cAGzBE,GAAY,CACdtI,MAAO,UACPuI,eAAgB,OAChBX,WAAY,KACZ,UAAW,CACP5H,MAAO,YAEX,WAAY,CACRA,MAAO,mBAIA,SAASwI,GAAT,GAAyD,IAAD,EAAtCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,kBAC/BhU,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OACA8B,EAASsE,IAAe,SAAAhG,GAAK,OAAIA,EAAM6F,WAAvCnE,KACFmS,EAAS,OAAGjU,QAAH,IAAGA,OAAH,EAAGA,EAAQnC,MAAMqW,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAMlM,EAAKzI,WAAU,GAE3E,OACI,eAAC4U,GAAA,EAAD,CAAQtG,SAAS,SAAjB,SACI,gBAACuG,GAAA,EAAD,CAASxG,GAAI,CAAE3C,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAA7E,UACI,gBAAC,KAAD,CAAKF,QAAQ,OAAOE,WAAW,SAA/B,UACI,eAACvB,EAAA,EAAD,CAAYE,QAAQ,KAAKgD,UAAWuH,KAASC,OAAK,EAAChF,GAAG,IAClD1B,GAAI+F,GADR,sBAIA,eAACY,GAAA,EAAD,CAAQ1I,QAASiI,EAAUrI,SAAUsI,OAEzC,gBAACxJ,EAAA,EAAD,CAAMqD,GAAI,CAAE3C,QAAS,QAArB,UACKuI,GAAShJ,KAAI,gBAAG/E,EAAH,EAAGA,MAAOgO,EAAV,EAAUA,KAAV,OACV,eAAChJ,EAAA,EAAD,CACIqC,UAAWuH,KACX/E,GAAImE,EAEJ7F,GAAI+F,GAJR,SAMKlO,EAAM6I,eAHFmF,MAMZ5R,IAAI,UAAIA,EAAKe,aAAT,aAAI,EAAYwM,SAAS,WAC9B,eAAC3E,EAAA,EAAD,CACIqC,UAAWuH,KACX/E,GAAI,aACJ1B,GAAI+F,GAHR,0BAQJ,gBAAC,KAAD,CAAK1I,QAAQ,OAAOE,WAAW,SAA/B,UACI,eAACqJ,GAAA,EAAD,CAAY1H,UAAWuC,KAAMC,GAAG,UAAUhE,KAAK,QAAQsC,GAAI,CAAEvC,MAAO,WAApE,SACI,eAACoJ,GAAA,EAAD,CAAOC,aAAcV,EAAW3I,MAAM,YAAtC,SACI,eAACsJ,GAAA,EAAD,QAGP9S,EACG,eAAC6Q,GAAD,IAEA,eAACnI,EAAA,EAAD,CAAMqD,GAAI,CAAE3C,QAAS,QAArB,SACKyI,GAAWlJ,KAAI,gBAAG/E,EAAH,EAAGA,MAAOgO,EAAV,EAAUA,KAAV,OACZ,eAAChJ,EAAA,EAAD,CACIqC,UAAWuH,KACX/E,GAAImE,EAEJ7F,GAAI+F,GAJR,SAMKlO,EAAM6I,eAHFmF,gB,OChF1B,SAASmB,KACpB,IAAMlS,EAAUmS,cACR1U,EAAU2U,cAAV3U,MAER,OACI,gBAACwJ,EAAA,EAAD,CAAWmD,UAAW6D,KAAtB,WACU,OAALxQ,QAAK,IAALA,OAAA,EAAAA,EAAOxB,OACJ,uCACI,eAACiL,EAAA,EAAD,CAAYE,QAAQ,KAAKuB,MAAM,QAAQxB,cAAY,EAAnD,SAAqD1J,EAAMxB,MAAM8G,QACjE,eAACsL,GAAA,EAAD,IACA,eAACnH,EAAA,EAAD,UAAazJ,EAAMxB,MAAMoW,QAAU,6BAGvC,eAACnL,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,0BAEJ,eAACI,EAAA,EAAD,CAAQC,QAAS,kBAAMxH,EAAQC,KAAK,aAApC,qCCVG,SAASqS,GAAT,GAA2C,IAAD,EAAlBC,EAAkB,EAAlBA,SAC5BlV,EAAUoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAxCA,YACUkB,IAAbgU,IACDA,EAAQ,iBAAGlV,QAAH,IAAGA,OAAH,EAAGA,EAAQnC,MAAMqW,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAOlM,EAAKzI,SAAWyI,EAAK8G,QAAQ,UAA3E,QAAiF,GAC5F,IAAMoG,EAAcD,EAAW,IAAQ,EAAI,IAE3C,OACI,qCACI,eAACxD,GAAA,EAAD,CAAgB3E,UAAW6D,KAAO7G,QAAS,WAA3C,SACI,eAAC4H,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWsD,QAAS,EAApB,sBACA,eAACtD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BrX,EAAekX,QAE7C,gBAACrD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWsD,QAAS,EAApB,2BACA,eAACtD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BrX,EAAemX,QAE7C,gBAACtD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAWsD,QAAS,EAApB,mBACA,eAACtD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BrX,EAAekX,EAAWC,QAExD,eAACtD,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,uBAAMhC,MAAO,CAACwF,UAAW,UAAzB,sE,4CCpBjB,SAASC,GAAT,GAAyD,IAAlC1X,EAAiC,EAAjCA,MAAiC,IAA1B2X,gBAA0B,SAC3DvV,EAAWmG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCC,OACF8B,EAAWmE,KACjB,OACI,eAACwL,GAAA,EAAD,CAAgB3E,UAAW6D,KAA3B,SACI,gBAACe,GAAA,EAAD,CAAO9D,GAAI,CAAE4H,SAAU,KAAvB,UACI,eAACC,GAAA,EAAD,UACI,gBAAC7D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,CAAWuD,MAAM,QAAjB,mBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,SAAjB,sBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,sBACCG,GACG,eAAC1D,GAAA,EAAD,CAAWuD,MAAM,eAG7B,eAACzD,GAAA,EAAD,UACK/T,EAAM4M,KAAI,SAAAxC,GAAI,OACX,gBAAC4J,GAAA,EAAD,CAEIhE,GAAI,CAAE,mCAAoC,CAAE8H,OAAQ,IAFxD,UAII,eAAC7D,GAAA,EAAD,CAAW/E,UAAU,KAAK6I,MAAM,MAAhC,SACI,gBAAC3K,GAAA,EAAD,CAAKC,QAAQ,OAAOE,WAAW,SAA/B,UACI,sBAAKoG,IAAKvJ,EAAK4G,WAAY4C,IAAKxJ,EAAKnI,KAAMgQ,MAAO,CAAEnC,OAAQ,GAAIkI,YAAa,MAC7E,gCAAO5N,EAAKnI,YAGpB,gBAACgS,GAAA,EAAD,CAAWuD,MAAM,QAAjB,eAA4BpN,EAAK8G,MAAQ,KAAK7Q,QAAQ,MACtD,gBAAC4T,GAAA,EAAD,CAAWuD,MAAM,SAAjB,UACKG,GACG,eAACrG,GAAA,EAAD,CACIC,QAASnP,IAAW,oBAAsBgI,EAAK1I,UAAY,MAC3D4K,QAAS,kBAAMpI,EAASrC,EAAsB,CAAEH,UAAW0I,EAAK1I,UAAWC,SAAU,EAAGM,KAAM,UAC9FwL,MAAM,QAHV,SAKI,eAACwK,GAAA,EAAD,MAEP7N,EAAKzI,SACLgW,GACG,eAACrG,GAAA,EAAD,CACIC,QAASnP,IAAW,iBAAmBgI,EAAK1I,UAC5C4K,QAAS,kBAAMpI,EAASzC,EAAmB,CAAEC,UAAW0I,EAAK1I,cAC7D+L,MAAM,YAHV,SAKI,eAACyK,GAAA,EAAD,SAGZ,gBAACjE,GAAA,EAAD,CAAWuD,MAAM,QAAjB,eAA6BpN,EAAK8G,MAAQ,IAAO9G,EAAKzI,UAAUtB,QAAQ,MACvEsX,GACG,eAAC1D,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SACI,eAAClG,GAAA,EAAD,CACIC,QAASnP,IAAW,oBAAsBgI,EAAK1I,UAAY,MAC3D4K,QAAS,kBAAMpI,EAASrC,EAAsB,CAAEH,UAAW0I,EAAK1I,UAAWC,SAAUyI,EAAKzI,SAAUM,KAAM,UAC1GwL,MAAM,QAHV,SAKI,eAAC0K,GAAA,EAAD,UArCP/N,EAAK1I,qBC1BvB,SAAS0W,KACpB,IAAQjW,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OAER,OAAKA,EAGD,uCACI,eAACuV,GAAD,CAAa1X,MAAOmC,EAAOnC,QAC3B,gBAAC4R,GAAA,EAAD,CAAMQ,WAAS,EAAf,UACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,gBAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,UACI,eAACuF,GAAD,IACA,eAAC/K,EAAA,EAAD,CACI6C,UAAWuC,KACXC,GAAG,YACHxF,QAAQ,YACRwB,KAAK,QACLtB,WAAS,EALb,+BATI,eAACJ,EAAA,EAAD,CAAYE,QAAQ,KAApB,kC,kCCKT,SAASmM,KAAS,IAAD,IACtBvT,EAAUmS,cACVqB,EAAWpB,cACXhT,EAAWmE,KACjB,EAAiFkQ,aAAQ,CACrFC,KAAM,QADFzN,EAAR,EAAQA,SAAU0N,EAAlB,EAAkBA,aAAlB,IAAgCC,UAAaC,EAA7C,EAA6CA,aAAcrP,EAA3D,EAA2DA,OAAQsP,EAAnE,EAAmEA,QAJvC,4CAQ5B,WAA0B5X,GAA1B,iBAAAN,EAAA,+EAEcwD,EAASL,EAAW7C,IAFlC,OAGQ8D,EAAQC,MAAK,UAAAuT,EAAS/V,aAAT,mBAAgBsW,YAAhB,eAAsBpP,WAAa,YAHxD,+CAKQjG,QAAQC,IAAR,MALR,yDAR4B,sBAiB5B,OACI,gBAACsI,EAAA,EAAD,CAAWmD,UAAW6D,KAAO+F,SAAS,KAAK9I,GAAI,CAAE3C,QAAS,OAAQ0L,cAAe,SAAUxL,WAAY,SAAU0F,EAAG,GAApH,UACI,eAAC1C,GAAA,EAAD,CAAQP,GAAI,CAAEgJ,EAAG,EAAGxI,QAAS,kBAA7B,SACI,eAAC,KAAD,MAEJ,eAACxE,EAAA,EAAD,CAAYkD,UAAU,KAAKhD,QAAQ,KAAnC,qBAGA,gBAAC,KAAD,CAAKgD,UAAU,OAAO+J,SAAUR,GAzBZ,8CAyBsCS,YAAU,EAAClJ,GAAI,CAAEmJ,GAAI,GAA/E,UACI,eAACvG,GAAA,EAAD,yBACIwG,OAAO,SACPhN,WAAS,EACTyC,MAAM,WACNwK,WAAS,GACLtO,EAAS,WAAY,CAAEuO,SAAU,0BALzC,IAMIvY,QAASuI,EAAOiQ,SAChBC,WAAU,OAAElQ,QAAF,IAAEA,GAAF,UAAEA,EAAQiQ,gBAAV,aAAE,EAAkB7J,WAElC,eAACkD,GAAA,EAAD,yBACIwG,OAAO,SACPhN,WAAS,EACTyC,MAAM,WACNuC,KAAK,YACDrG,EAAS,WAAY,CAAEuO,SAAU,0BALzC,IAMIvY,QAASuI,EAAOmQ,SAChBD,WAAU,OAAElQ,QAAF,IAAEA,GAAF,UAAEA,EAAQmQ,gBAAV,aAAE,EAAkB/J,WAElC,eAAC4B,GAAA,EAAD,CACI8C,UAAWwE,EACXrH,QAASoH,EACTvH,KAAK,SACLhF,WAAS,EACTF,QAAQ,YACR8D,GAAI,CAAEmJ,GAAI,EAAGnG,GAAI,GANrB,qBAUA,eAACpB,GAAA,EAAD,CAAMQ,WAAS,EAAf,SACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAAV,SACI,eAAC,KAAD,CAAMsH,GAAG,YAAT,SACK,6CCzDd,SAASgI,KAAY,IAAD,MACzB5U,EAAUmS,cAChB,EAA2FsB,aAAQ,CAC/FC,KAAM,QADFzN,EAAR,EAAQA,SAAU0N,EAAlB,EAAkBA,aAAckB,EAAhC,EAAgCA,SAAhC,IAA0CjB,UAAaC,EAAvD,EAAuDA,aAAcrP,EAArE,EAAqEA,OAAQsP,EAA7E,EAA6EA,QAkB7E,OACI,gBAAC7M,EAAA,EAAD,CAAWmD,UAAW6D,KAAO+F,SAAS,KAAK9I,GAAI,CAAE3C,QAAS,OAAQ0L,cAAe,SAAUxL,WAAY,SAAU0F,EAAG,GAApH,UACI,eAAC1C,GAAA,EAAD,CAAQP,GAAI,CAAEgJ,EAAG,EAAGxI,QAAS,kBAA7B,SACI,eAAC,KAAD,MAEJ,eAACxE,EAAA,EAAD,CAAYkD,UAAU,KAAKhD,QAAQ,KAAnC,sBAGA,gBAAC,KAAD,CAAKgD,UAAU,OACX+J,SAAUR,GAAa,SAACzX,GAAD,OACnBL,GAAMmD,QAAQiH,SAAS/J,GAClB8I,MAAK,WACF1E,IAAMwU,QAAQ,+CACd9U,EAAQC,KAAK,aAEhBwH,OAAM,SAAAxL,GAAK,OA7BhC,SAAyBuI,GACjBA,GACAA,EAAOuQ,SAAQ,SAAC9Y,GACRA,EAAMyQ,SAAS,YACfmI,EAAS,WAAY,CAAEjK,QAAS3O,IACzBA,EAAMyQ,SAAS,SACtBmI,EAAS,QAAS,CAAEjK,QAAS3O,IACtBA,EAAMyQ,SAAS,aACtBmI,EAAS,WAAY,CAAEjK,QAAS3O,OAqBZ+Y,CAAgB/Y,SAExCmY,YAAU,EAAClJ,GAAI,CAAEmJ,GAAI,GATzB,UAWI,eAACvG,GAAA,EAAD,yBACIwG,OAAO,SACPhN,WAAS,EACTyC,MAAM,WACNwK,WAAS,GACLtO,EAAS,WAAY,CAAEuO,SAAU,0BALzC,IAMIvY,QAASuI,EAAOiQ,SAChBC,WAAU,OAAElQ,QAAF,IAAEA,GAAF,UAAEA,EAAQiQ,gBAAV,aAAE,EAAkB7J,WAElC,eAACkD,GAAA,EAAD,yBACIwG,OAAO,SACPhN,WAAS,EACTyC,MAAM,iBACF9D,EAAS,QAAS,CAClBuO,SAAU,oBACVS,QAAS,CACLtL,MAAO,4CACPiB,QAAS,gCARrB,IAWI3O,QAASuI,EAAOgM,MAChBkE,WAAU,OAAElQ,QAAF,IAAEA,GAAF,UAAEA,EAAQgM,aAAV,aAAE,EAAe5F,WAE/B,eAACkD,GAAA,EAAD,yBACIwG,OAAO,SACPhN,WAAS,EACTyC,MAAM,WACNuC,KAAK,YACDrG,EAAS,WAAY,CACrBuO,SAAU,uBACVS,QAAS,CACLtL,MAAO,wGACPiB,QAAS,qCATrB,IAYI3O,QAASuI,EAAOmQ,SAChBD,WAAU,OAAElQ,QAAF,IAAEA,GAAF,UAAEA,EAAQmQ,gBAAV,aAAE,EAAkB/J,WAElC,eAAC4B,GAAA,EAAD,CACI8C,UAAWwE,EACXrH,QAASoH,EACTvH,KAAK,SACLhF,WAAS,EACTF,QAAQ,YACR8D,GAAI,CAAEmJ,GAAI,EAAGnG,GAAI,GANrB,sBAUA,eAACpB,GAAA,EAAD,CAAMQ,WAAS,EAAf,SACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAAV,SACI,eAAC,KAAD,CAAMsH,GAAG,SAAT,SACK,+C,6BC9Fd,SAASsI,GAAT,GAAwE,IAArCC,EAAoC,EAA/C/K,UAAsBlK,EAAyB,EAAzBA,MAAUkV,EAAe,kBAC5EjW,EAASsE,IAAe,SAAAhG,GAAK,OAAIA,EAAM6F,WAAvCnE,KACR,OACE,eAAC,IAAD,2BAAWiW,GAAX,IAAiBC,OAAQ,SAAAC,GACvB,OAAKnW,EAIDe,KAAS,OAACA,QAAD,IAACA,OAAD,EAACA,EAAOqV,MAAK,SAAAC,GAAC,uBAAIrW,EAAKe,aAAT,aAAI,EAAYwM,SAAS8I,QAClDlV,IAAMrE,MAAM,sCACL,eAAC,IAAD,CAAU2Q,GAAI,CAAEjI,SAAU,eAG5B,eAACwQ,EAAD,eAAeG,IARb,eAAC,IAAD,CAAU1I,GAAI,CAAEjI,SAAU,SAAUlH,MAAO,CAAEsW,KAAMuB,EAAM9B,iBCHzD,SAASiC,GAAT,GAA4D,IAAD,EAAlCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,iBACrCpD,EAAQ,UAAGmD,EAAME,WAAWrE,QAAO,SAACC,EAAKlM,GAAN,OAAekM,EAAOlM,EAAKzI,SAAWyI,EAAK8G,QAAQ,UAA9E,QAAoF,EAClG,OACI,uCACI,gBAAC9D,GAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,gBAAnC,UACI,gBAACtB,EAAA,EAAD,CAAYgE,GAAI,CAAEiD,EAAG,GAAKhH,cAAY,EAACC,QAAQ,KAA/C,oBAA4DsO,EAAMjQ,GAAlE,MAAyEiQ,EAAMG,eAC/E,eAACtO,EAAA,EAAD,CAAQC,QAAS,kBAAMmO,EAAiB,IAAIzK,GAAI,CAAEgJ,EAAG,GAAKtL,KAAK,QAAQxB,QAAQ,YAA/E,+BAEJ,eAACwL,GAAD,CAAa1X,MAAOwa,EAAME,WAA4B/C,UAAU,IAChE,gBAAC/F,GAAA,EAAD,CAAMQ,WAAS,EAAf,UACI,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,eAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACI,eAACuF,GAAD,CAAeC,SAAUA,YChB9B,SAASpM,KACpB,MAA4BW,mBAAyB,MAArD,mBAAOgP,EAAP,KAAeC,EAAf,KACA,EAA8BjP,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBuJ,EAAhB,KACA,EAAsDlP,mBAAS,GAA/D,mBAAOmP,EAAP,KAA4BC,EAA5B,KASA,OAPAxL,qBAAU,WACN7O,GAAMsK,OAAOzE,OACRsD,MAAK,SAAA8Q,GAAM,OAAIC,EAAUD,MACzBrO,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,MAC3Bka,SAAQ,kBAAMH,GAAW,QAC/B,IAECvJ,EAAgB,eAAC9B,GAAD,CAAkBC,QAAQ,mBAE1CqL,EAAsB,EACtB,eAACR,GAAD,CACIC,MAAK,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAQnH,MAAK,SAAAyH,GAAC,OAAIA,EAAE3Q,KAAOwQ,KAClCN,iBAAkBO,IAKtB,eAACnH,GAAA,EAAD,CAAgB3E,UAAW6D,KAA3B,SACI,gBAACe,GAAA,EAAD,CAAO9D,GAAI,CAAE4H,SAAU,KAAO,aAAW,eAAzC,UACI,eAACC,GAAA,EAAD,UACI,gBAAC7D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,2BACA,eAACA,GAAA,EAAD,CAAWuD,MAAM,QAAjB,mBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,wBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,0BACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,eAGzB,eAACzD,GAAA,EAAD,iBACK6G,QADL,IACKA,OADL,EACKA,EAAQhO,KAAI,SAAC4N,GAAD,OACT,gBAACxG,GAAA,EAAD,CAEIhE,GAAI,CAAE,mCAAoC,CAAE8H,OAAQ,IAFxD,UAII,eAAC7D,GAAA,EAAD,CAAW/E,UAAU,KAAK6I,MAAM,MAAhC,SACKyC,EAAMjQ,KAEX,eAAC0J,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BrX,EAAeqa,EAAMW,SAC/C,eAAClH,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BgD,EAAMY,UAAUjW,MAAM,KAAK,KACrD,eAAC8O,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BgD,EAAMG,cAChC,eAAC1G,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SACI,eAACnL,EAAA,EAAD,CAAQC,QAAS,kBAAM0O,EAAuBR,EAAMjQ,KAApD,sBAVCiQ,EAAMjQ,c,6DClCxB,SAAS8Q,GAAajB,GAAe,IAAD,EAC/C,EAA4BkB,aAAc,2BAAIlB,GAAL,IAAYmB,aAAc,MAA5DC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,MACnB,OACI,eAAC7I,GAAA,EAAD,uCACQwH,GACAqB,GAFR,IAGIC,UAAWtB,EAAMsB,UACjBC,KAAMvB,EAAMuB,KACZvK,KAAMgJ,EAAMhJ,KACZhF,WAAS,EACTF,QAAQ,WACRnL,QAASya,EAAWza,MACpByY,WAAU,UAAEgC,EAAWza,aAAb,aAAE,EAAkB2O,WCd3B,SAASkM,GAAYxB,GAChC,IAAOqB,EAASH,aAAc,2BAAIlB,GAAL,IAAYmB,cAAc,KAAhDE,MACP,OACI,eAACpN,GAAA,EAAD,CACIC,QACI,eAACC,GAAA,EAAD,2BACQkN,GADR,IAEIxN,QAASwN,EAAMhN,MACfhB,MAAM,YACN2G,SAAUgG,EAAMhG,YAGxBvF,MAAOuL,EAAMvL,QCdV,SAASgN,KACpB,MAA+BC,eAAvBxN,EAAR,EAAQA,QAASoK,EAAjB,EAAiBA,UACjB,OACI,uCACI,eAAC1M,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,8BAGA,gBAAC2F,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,GAAvB,SACI,eAACV,GAAD,CAAc/M,QAASA,EAASrM,KAAK,WAAW4M,MAAM,gBAE1D,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAACwJ,GAAD,CAAc/M,QAASA,EAASrM,KAAK,WAAW4M,MAAM,qBAE1D,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAACwJ,GAAD,CAAc/M,QAASA,EAASrM,KAAK,WAAW4M,MAAM,qBAE1D,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc/M,QAASA,EAASrM,KAAK,OAAO4M,MAAM,WAEtD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc/M,QAASA,EAASrM,KAAK,QAAQ4M,MAAM,YAEvD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc/M,QAASA,EAASrM,KAAK,MAAM4M,MAAM,cAErD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAc/M,QAASA,EAASrM,KAAK,UAAU4M,MAAM,cAEzD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAAC+J,GAAD,CACIxH,UAAWsE,EAAUsD,QACrB/Z,KAAK,cACL4M,MAAM,mCACNP,QAASA,Y,qBCnCpB2N,GAAcC,sBAAW,WAClCC,GAAmB,IADgDlC,EACjD,EADsC/K,UAAyBkL,EAC/D,kBACRgC,EAAaC,mBAMnB,OAJAC,8BAAoBH,GAAK,iBAAO,CAC5BI,MAAO,kBAAMH,EAAWI,QAAQD,WAIhC,eAACtC,EAAD,aACIwC,QAAS,SAACC,GAAD,OAAkBN,EAAWI,QAAUE,IAC5CtC,OCFL,SAASuC,GAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,kBACtCvO,EAAYwN,eAAZxN,QAER,OACE,uCACE,eAACtC,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,4BAGA,gBAAC2F,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACE,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiL,GAAI,EAAvB,SACE,eAACzB,GAAD,CAAcpZ,KAAK,aAAa4M,MAAM,eAAeP,QAASA,MAEhE,eAACsD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiL,GAAI,EAAvB,SACE,eAAClK,GAAA,EAAD,CACE/E,SAAUgP,EACV9b,QAAS6b,EAAUG,aAAaC,WAChCxD,WAAYoD,EAAUG,aAAaC,WACnCnO,MAAM,cACNzC,WAAS,EACT6Q,aAAa,YACb/Q,QAAQ,WACRgR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACVC,eAAgBpB,GAChBqB,WAAY,CACVpO,UAAWqO,2BAKnB,eAAC3L,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiL,GAAI,EAAvB,SACE,eAAClK,GAAA,EAAD,CACE/E,SAAUgP,EACV9b,QAAS6b,EAAUG,aAAaS,WAChChE,WAAYoD,EAAUG,aAAaS,WACnCjT,GAAG,UACHsE,MAAM,cACNzC,WAAS,EACT6Q,aAAa,SACb/Q,QAAQ,WACRgR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACVC,eAAgBpB,GAChBqB,WAAY,CACVpO,UAAWuO,2BAKnB,eAAC7L,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIiL,GAAI,EAAvB,SACE,eAAClK,GAAA,EAAD,CACE/E,SAAUgP,EACV9b,QAAS6b,EAAUG,aAAaW,QAChClE,WAAYoD,EAAUG,aAAaW,QACnCnT,GAAG,MACHsE,MAAM,MACNzC,WAAS,EACT6Q,aAAa,SACb/Q,QAAQ,WACRgR,gBAAiB,CAAEC,QAAQ,GAC3BC,WAAY,CACVC,eAAgBpB,GAChBqB,WAAY,CACVpO,UAAWyO,8BCvEZ,SAASC,KACtB,IAAOzb,EAAUoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAxCA,OACP,OACE,uCACE,eAAC6J,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,2BAGC9J,GACD,eAACuV,GAAD,CAAa1X,MAAOmC,EAAOnC,MAAO2X,UAAU,IAC5C,gBAAC/F,GAAA,EAAD,CAAMQ,WAAS,EAAf,UACE,eAACR,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,IACf,eAACD,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,EAAf,SACE,eAACuF,GAAD,Y,uBChBGyG,GAAmB,CAC5BC,KAAW,CACPC,SAAUD,OAAaxE,SAAS,yBAChC0E,SAAUF,OAAaxE,SAAS,6BAChC2E,SAAUH,OAAaxE,WACvB4E,KAAMJ,OAAaxE,WACnB/W,MAAOub,OAAaxE,WACpB6E,IAAKL,OAAaxE,WAClB8E,QAASN,OAAaxE,aAE1BwE,OACAA,KAAW,CACPO,WAAYP,OAAaxE,c,gCCC3BgF,GAAQ,CAAC,mBAAoB,oBAAqB,mBAEzC,SAASC,KACpB,MAAoC3S,mBAAS,GAA7C,mBAAO4S,EAAP,KAAmBC,EAAnB,KACA,EAAsC7S,mBAAS,GAA/C,mBAAO8S,EAAP,KAAoBC,EAApB,KACA,EAA8B/S,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBuJ,EAAhB,KACM5W,EAAWmE,KACjB,EAAkCuD,mBAAoE,CAAEmR,aAAc,KAAtH,mBAAOH,EAAP,KAAkBgC,EAAlB,KACA,EAAwChT,mBAAc,CAAEoR,YAAY,EAAOQ,YAAY,EAAOE,SAAS,IAAvG,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAA4ClT,mBAAS,IAArD,mBAAOmT,EAAP,KAAuBC,EAAvB,KACA,EAAgDpT,oBAAS,GAAzD,mBAAOqT,EAAP,KAAyBC,EAAzB,KACQ/c,EAAWoG,IAAe,SAAAhG,GAAK,OAAIA,EAAMJ,UAAzCA,OACFgd,EAASC,uBACTC,EAAWC,yBAEjB,SAASzC,EAAkBnK,GAAa,IAAD,EACnCkM,EAAa,2BACNhC,GADK,IAERG,aAAa,2BACNH,EAAUG,cADL,mBAEPrK,EAAM6M,YAFC,UAEa7M,EAAM3R,aAFnB,aAEa,EAAa2O,aAG1CoP,EAAgB,2BAAKD,GAAN,mBAAqBnM,EAAM6M,YAAc7M,EAAM8M,YAgBlE,IAAMC,EAA0B5B,GAAiBW,GAE3CkB,EAAUnH,aAAQ,CACpBC,KAAM,MACNmH,SAAUC,aAAYH,KAzCS,SAqDpBI,EArDoB,8EAqDnC,WAA2B7e,GAA3B,6BAAAN,EAAA,yDACIoa,GAAW,GACHuD,EAAgDrd,EAAhDqd,WAAYyB,EAAoC9e,EAApC8e,YAAgBC,EAFxC,YAE4D/e,EAF5D,IAGSme,GAAWE,EAHpB,iEAKcW,EAAcX,EAASY,WAAW1C,sBALhD,SAMoC4B,EAAOe,mBAAP,OAA0B/d,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQge,aAAe,CACzEC,eAAgB,CACZC,KAAML,EACNM,gBAAiB,CACbre,KAAMoc,MAV1B,UAMckC,EANd,OAcQ/c,QAAQC,IAAI8c,GACgC,eAAxC,UAAAA,EAAcC,qBAAd,eAA6Bpe,QAfzC,kCAgBsCzB,GAAMsK,OAAOE,OAAO,CAAE2U,cAAaC,oBAhBzE,QAgBkBrB,EAhBlB,OAiBYC,EAAeD,GACfQ,GAAoB,GACpBF,EAAkB,6CAClBP,EAAcD,EAAa,GAC3Bta,EAASxB,KACToY,GAAW,GAtBvB,wBAwBYkE,EAAiB,UAACuB,EAAcxf,aAAf,aAAC,EAAqB2O,SACvCwP,GAAoB,GACpBpE,GAAW,GACX2D,EAAcD,EAAa,GA3BvC,0DA8BQhb,QAAQC,IAAR,MACAqX,GAAW,GA/BnB,2DArDmC,sBA4CnCtL,qBAAU,WACN7O,GAAMmD,QAAQkH,eACTlB,MAAK,SAAArD,GACEA,GACAiZ,EAAQe,MAAR,uCAAmBf,EAAQgB,aAAgBja,GAA3C,IAAqDqZ,aAAa,UAG/E,CAACJ,IAsCJ,IAAMiB,EAAU,uCAAG,WAAO3f,GAAP,SAAAN,EAAA,yDACX8d,IAAeF,GAAMpY,OAAS,EADnB,gCAEL2Z,EAAY7e,GAFP,6BAIXyd,EAAcD,EAAa,GAJhB,2CAAH,sDAQVoC,EAAa,WACfnC,EAAcD,EAAa,IAc/B,OACI,eAAC,KAAD,2BAAkBkB,GAAlB,aACI,gBAAC3M,GAAA,EAAD,CAAO7G,QAAQ,WAAW8D,GAAI,CAAE6Q,GAAI,CAAEhP,GAAI,EAAGiL,GAAI,GAAK7J,EAAG,CAAEpB,GAAI,EAAGiL,GAAI,IAAtE,UACI,eAAC9Q,EAAA,EAAD,CAAYkD,UAAU,KAAKhD,QAAQ,KAAKsL,MAAM,SAA9C,sBAGA,eAACsJ,GAAA,EAAD,CAAStC,WAAYA,EAAYxO,GAAI,CAAE+Q,GAAI,EAAGC,GAAI,GAAlD,SACK1C,GAAM1R,KAAI,SAACiC,GAAD,OACP,eAACoS,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UAAYrS,KADLA,QAKnB,qCACK2P,IAAeF,GAAMpY,OAClB,uCACI,eAAC8F,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,SACK8S,IAEJE,EACG,gBAACjT,EAAA,EAAD,CAAYE,QAAQ,YAApB,mCAC2BwS,EAD3B,yIAMA,eAACrS,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAASsU,EAArC,sCAOR,wBAAM3H,SAAUyG,EAAQjH,aAAakI,GAArC,UAzHpB,SAAwBQ,GACpB,OAAQA,GACJ,KAAK,EACD,OAAO,eAACtF,GAAD,IACX,KAAK,EACD,OAAO,eAAC+B,GAAD,IACX,KAAK,EACD,OAAO,eAACjB,GAAD,CAAaC,UAAWA,EAAWC,kBAAmBA,IACjE,QACI,MAAM,IAAIuE,MAAM,iBAiHHC,CAAe7C,GAChB,gBAAC,KAAD,CAAKxO,GAAI,CAAE3C,QAAS,OAAQC,eAAgB,YAA5C,UACoB,IAAfkR,GACG,eAACnS,EAAA,EAAD,CAAQC,QAASsU,EAAY5Q,GAAI,CAAEmJ,GAAI,EAAGmI,GAAI,GAA9C,kBAIJ,eAAChQ,GAAA,EAAD,CACIC,QAASA,EACT6C,SArDxBoK,IAAeF,GAAMpY,OAAS,KACtB2Y,EAAanB,UACbmB,EAAarB,aACbqB,EAAa7B,cAGb0C,EAAQhH,UAAUE,QAgDF1M,QAAQ,YACRkF,KAAK,SACLpB,GAAI,CAAEmJ,GAAI,EAAGmI,GAAI,GALrB,SAOK9C,IAAeF,GAAMpY,OAAS,EAAI,cAAgB,uBCxKvF,IAAMqb,GAAgBC,aAAW,+GAElB,SAASC,KACpB,IAAMvd,EAAWmE,KACjB,EAA8BuD,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBuJ,EAAhB,KASA,OAPAtL,qBAAU,WACN7O,GAAMyK,SAASC,sBACVvB,MAAK,SAAA3H,GAAM,OAAI+B,EAAS5B,EAAUH,OAClCoK,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,MAC3Bka,SAAQ,kBAAMH,GAAW,QAC/B,CAAC5W,IAEAqN,EAAgB,eAAC9B,GAAD,CAAkBC,QAAQ,wBAG1C,eAAC,YAAD,CAAUyP,OAAQoC,GAAlB,SACI,eAAChD,GAAD,M,4CClBG,SAASmD,GAAYtH,GAAe,IAAD,EAC9C,EAA8BkB,aAAc,2BAAKlB,GAAN,IAAamB,aAAc,QAA9DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAEdkG,EAAW,CACbtU,QAAS,OACTyK,OAAQ,kBACR8J,YAAa,OACbC,aAAc,MACdC,WAAY,OACZvU,WAAY,SACZuC,OAAQ,IACRkC,MAAO,KAOL+P,EAASC,uBAAY,SAAAC,GACvBA,EAAc,GAAKC,OAAOC,OAAOF,EAAc,GAC3C,CAACG,QAASC,IAAIC,gBAAgBL,EAAc,MAChDxG,EAAM5N,SAASoU,EAAc,MAC9B,CAACxG,IACJ,EAAsD8G,aAAY,CAAER,WAA5DS,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,aAErC,OACI,gDAASF,KAAT,aACI,gBAACvT,GAAA,EAAD,CAAalO,QAASya,EAAWza,MAAOkR,MAAOyQ,EAAY,2BAAOf,GAbzD,CACbC,YAAa,UAYkFD,EAA3F,UACI,sCAAWc,MACX,eAACE,GAAA,EAAD,CAAY3S,GAAI,CAAC4S,SAAU,WAC3B,eAAC5W,EAAA,EAAD,CAAYE,QAAQ,KAApB,6BACA,eAAC2W,GAAA,EAAD,oBAAiBrH,EAAWza,aAA5B,aAAiB,EAAkB2O,gB,wBC/BpC,SAASoT,GAAc1I,GAAe,IAAD,EAChD,EAA8BkB,aAAc,2BAAKlB,GAAN,IAAamB,aAAc,MAA9DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MACpB,OACI,gBAACxM,GAAA,EAAD,CAAa7C,WAAS,EAACrL,QAASya,EAAWza,MAA3C,UACI,eAACgiB,GAAA,EAAD,UAAa3I,EAAMvL,QACnB,eAACmU,GAAA,EAAD,CACIvU,MAAOgN,EAAMhN,MACbI,MAAOuL,EAAMvL,MACbhB,SAAU4N,EAAM5N,SAHpB,SAKKuM,EAAMpa,MAAM4M,KAAI,SAACxC,EAAM6Y,GAAP,OACb,eAACtN,GAAA,EAAD,CAAsBlH,MAAOrE,EAA7B,SAAoCA,GAArB6Y,QAGvB,eAACJ,GAAA,EAAD,oBAAiBrH,EAAWza,aAA5B,aAAiB,EAAkB2O,aCpBxC,IAAMmO,GAAmBC,KAAW,CACvC7b,KAAM6b,OAAaxE,WACnBnI,MAAO2M,OAAaxE,WACpBlI,KAAM0M,OAAaxE,WACnBpI,MAAO4M,OAAaxE,WAAW4J,SAAS,KACxC/O,gBAAiB2J,OAAaxE,WAAW6J,IAAI,GAC7CjP,YAAa4J,OAAaxE,WAC1B8J,KAAMtF,OAAYuF,KAAK,aAAc,CACjCC,GAAI,SAAC7U,GAAD,OAAoBA,GACxB3E,KAAMgU,OAAYxE,SAAS,+BCSpB,SAASiK,GAAT,GAAsD,IAA/B/X,EAA8B,EAA9BA,QAASgY,EAAqB,EAArBA,WAC3C,EAAoFjL,aAAQ,CACxFC,KAAM,MACNmH,SAAUC,aAAiB/B,MAFvBvP,EAAR,EAAQA,QAASmS,EAAjB,EAAiBA,MAAOhI,EAAxB,EAAwBA,aAAcgL,EAAtC,EAAsCA,MAAtC,IAA6C/K,UAAYsD,EAAzD,EAAyDA,QAASrD,EAAlE,EAAkEA,aAIlE,EAA0BtJ,KAAlBpJ,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,MACVud,EAAYD,EAAM,OAAQ,MAC1Bvf,EAAWmE,KAP+C,4CAgBhE,WAAgCrH,GAAhC,eAAAN,EAAA,mEAGY8K,EAHZ,gCAI6B7K,GAAM2K,MAAMG,cAAczK,GAJvD,OAIYyF,EAJZ,8CAM6B9F,GAAM2K,MAAMC,cAAcvK,GANvD,OAMYyF,EANZ,eAQQvC,EAASmD,GAAWZ,IACpB+c,IATR,kDAWQhgB,QAAQC,IAAR,MAXR,2DAhBgE,sBA+BhE,OAtBA+L,qBAAU,WAEN,OADIhE,GAAYkY,GAAe1H,GAASyE,EAAMjV,GACvC,WACCkY,GAAWrB,IAAIsB,gBAAgBD,EAAUtB,YAElD,CAAC5W,EAASiV,EAAOiD,EAAW1H,IAkB3B,gBAAC,KAAD,CAAK9M,UAAW6D,KAAO/C,GAAI,CAAEiD,EAAG,GAAhC,UACI,eAACjH,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAAC+D,GAAI,CAAEgD,GAAI,GAAhD,6BAGA,wBAAMiG,SAAUR,GApCwC,8CAoCxD,UACI,gBAAC7G,GAAA,EAAD,CAAMQ,WAAS,EAACC,QAAS,EAAzB,UACI,eAACT,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,GAAvB,SACI,eAACV,GAAD,CAAc/M,QAASA,EAASrM,KAAK,OAAO4M,MAAM,mBAEtD,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAAC+G,GAAD,CAAe9iB,MAAOiG,EAAQqI,QAASA,EAASrM,KAAK,QAAQ4M,MAAM,YAEvE,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAAC+G,GAAD,CAAe9iB,MAAOmG,EAAOmI,QAASA,EAASrM,KAAK,OAAO4M,MAAM,WAErE,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAcjK,KAAK,SAAS9C,QAASA,EAASrM,KAAK,QAAQ4M,MAAM,YAErE,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAIkK,GAAI,EAAvB,SACI,eAACV,GAAD,CAAcjK,KAAK,SAAS9C,QAASA,EAASrM,KAAK,kBAAkB4M,MAAM,wBAE/E,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,eAACwJ,GAAD,CAAcK,WAAW,EAAMC,KAAM,EAAGrN,QAASA,EAASrM,KAAK,cAAc4M,MAAM,kBAEvF,eAAC+C,GAAA,EAAD,CAAMxH,MAAI,EAACyH,GAAI,GAAf,SACI,gBAAC,KAAD,CAAKxE,QAAQ,OAAOC,eAAe,gBAAgBC,WAAW,SAA9D,UACI,eAACmU,GAAD,CAAapT,QAASA,EAASrM,KAAK,SACnCyhB,EACG,sBAAK/P,IAAK+P,EAAUtB,QAASxO,IAAI,UAAU3B,MAAO,CAAC4C,UAAW,OAE9D,sBAAKlB,IAAG,OAAEnI,QAAF,IAAEA,OAAF,EAAEA,EAASwF,WAAY4C,IAAG,OAAEpI,QAAF,IAAEA,OAAF,EAAEA,EAASvJ,KAAMgQ,MAAO,CAAC4C,UAAW,eAMtF,gBAAC,KAAD,CAAKxH,QAAQ,OAAOC,eAAe,gBAAgB0C,GAAI,CAAEmJ,GAAI,GAA7D,UACI,eAAC9M,EAAA,EAAD,CAAQC,QAASkX,EAAYtX,QAAQ,YAAYuB,MAAM,UAAvD,oBACA,eAAC6D,GAAA,EAAD,CAAeC,QAASoH,EAAcvH,KAAK,SAASlF,QAAQ,YAAYuB,MAAM,UAA9E,6BC7EL,SAASmW,KACpB,MAA6BvU,KAAtBC,EAAP,EAAOA,SAAUrP,EAAjB,EAAiBA,SACXiE,EAAWmE,KACjB,EAAgCuD,oBAAS,GAAzC,mBAAOiY,EAAP,KAAiBC,EAAjB,KACA,EAA8ClY,wBAA8BvI,GAA5E,mBAAO0gB,EAAP,KAAwBC,EAAxB,KACA,EAA8BpY,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBuJ,EAAhB,KACA,EAA4BlP,mBAAS,GAArC,mBAAO+G,EAAP,KAAesR,EAAf,KAqBA,OAAIJ,EAAiB,eAACN,GAAD,CAAa/X,QAASuY,EAAiBP,WAL5D,WACQO,GAAiBC,OAAmB3gB,GACxCygB,GAAY,MAMZ,uCACI,gBAAC,KAAD,CAAKzW,QAAQ,OAAOC,eAAe,gBAAnC,UACI,eAACtB,EAAA,EAAD,CAAYgE,GAAI,CAAEiD,EAAG,GAAK/G,QAAQ,KAAlC,uBACA,eAACG,EAAA,EAAD,CAAQC,QAAS,kBAAMwX,GAAY,IAAO9T,GAAI,CAAEgJ,EAAG,GAAKtL,KAAK,QAAQxB,QAAQ,YAA7E,uBAEJ,eAAC2H,GAAA,EAAD,CAAgB3E,UAAW6D,KAA3B,SACI,gBAACe,GAAA,EAAD,CAAO9D,GAAI,CAAE4H,SAAU,KAAO,aAAW,eAAzC,UACI,eAACC,GAAA,EAAD,UACI,gBAAC7D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,gBACA,eAACA,GAAA,EAAD,CAAWuD,MAAM,OAAjB,qBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,QAAjB,mBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,SAAjB,kBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,SAAjB,mBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,SAAjB,sBACA,eAACvD,GAAA,EAAD,CAAWuD,MAAM,eAGzB,eAACzD,GAAA,EAAD,UACKzE,EAAS1C,KAAI,SAACpB,GAAD,OACV,gBAACwI,GAAA,EAAD,CAEIhE,GAAI,CAAE,mCAAoC,CAAE8H,OAAQ,IAFxD,UAII,eAAC7D,GAAA,EAAD,CAAW/E,UAAU,KAAK6I,MAAM,MAAhC,SACKvM,EAAQjB,KAEb,eAAC0J,GAAA,EAAD,CAAWuD,MAAM,OAAjB,SACI,gBAAC,KAAD,CAAKnK,QAAQ,OAAOE,WAAW,SAA/B,UACI,sBAAKoG,IAAKnI,EAAQwF,WAAY4C,IAAKpI,EAAQvJ,KAAMgQ,MAAO,CAAEnC,OAAQ,GAAIkI,YAAa,MACnF,gCAAOxM,EAAQvJ,YAGvB,eAACgS,GAAA,EAAD,CAAWuD,MAAM,QAAjB,SAA0BrX,EAAeqL,EAAQ0F,SACjD,eAAC+C,GAAA,EAAD,CAAWuD,MAAM,SAAjB,SAA2BhM,EAAQ4F,OACnC,eAAC6C,GAAA,EAAD,CAAWuD,MAAM,SAAjB,SAA2BhM,EAAQ2F,QACnC,eAAC8C,GAAA,EAAD,CAAWuD,MAAM,SAAjB,SAA2BhM,EAAQ2I,kBACnC,gBAACF,GAAA,EAAD,CAAWuD,MAAM,QAAjB,UACI,eAACnL,EAAA,EAAD,CAAQC,QAAS,kBA5DjD,SAA6Bd,GACzBwY,EAAmBxY,GACnBsY,GAAY,GA0DuCI,CAAoB1Y,IAAU2Y,UAAW,eAACC,GAAA,EAAD,MAChE,eAAC9S,GAAA,EAAD,CACIC,QAASA,GAAWoB,IAAWnH,EAAQjB,GACvC4Z,UAAW,eAAChM,GAAA,EAAD,IAAY1K,MAAM,QAC7BnB,QAAS,kBA3DhB/B,EA2D0CiB,EAAQjB,GA1D3EuQ,GAAW,GACXmJ,EAAU1Z,QACV5J,GAAM2K,MAAMI,cAAcnB,GACrBT,MAAK,kBAAM5F,EAASqD,GAAcgD,OAClCgC,OAAM,SAAAxL,GAAK,OAAIyC,QAAQC,IAAI1C,MAC3Bka,SAAQ,kBAAMH,GAAW,MANlC,IAA6BvQ,UAsCIiB,EAAQjB,cA6BhCtK,GACG,eAAC,KAAD,CAAK+P,GAAI,CAAC+Q,GAAI,GAAd,SACI,eAAChU,GAAD,CACI9M,SAAUA,EACV+M,aAAc,SAACY,GAAD,OAAkB1J,EAASiD,GAAc,CAACvB,WAAYgI,aCT7EyW,OA/Df,WACE,IAAMngB,EAAWmE,KACjB,EAA8BuD,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBuJ,EAAhB,KAEMwJ,EAAUtC,sBAAW,sBAAC,sBAAAthB,EAAA,+EAElBwD,EAASK,KAFS,uBAGlBL,EAAS5D,KAHS,uDAKxBkD,QAAQC,IAAR,MALwB,yDAOzB,CAACS,IAEJsL,qBAAU,WACR8U,IAAUxa,MAAK,kBAAMgR,GAAW,QAC/B,CAACwJ,IAEJ,MAAgC1Y,oBAAS,GAAzC,mBAAOsK,EAAP,KAAiBqO,EAAjB,KACMC,EAActO,EAAW,OAAS,QAClCuO,EAAQC,YAAY,CACxBC,QAAS,CACPnM,KAAMgM,EACNI,WAAY,CACVC,QAAyB,UAAhBL,EAA0B,UAAY,cASrD,OAAIjT,EAAgB,eAAC9B,GAAD,CAAkBC,QAAQ,wBAG5C,gBAACoV,EAAA,EAAD,CAAeL,MAAOA,EAAtB,UACE,eAAC,IAAD,CAAgBxU,SAAS,eAAe8U,iBAAe,EAACN,MAAM,YAC9D,eAACO,EAAA,EAAD,IACA,eAAC/O,GAAD,CAAQC,SAAUA,EAAUC,kBAVhC,WACEoO,GAAarO,MAUX,eAAC,IAAD,CAAOQ,OAAK,EAACb,KAAK,IAAI3G,UAAWqF,KACjC,eAAC,IAAD,CAAOsB,KAAM,QAASsE,OAAQ,kBAC5B,eAACpO,EAAA,EAAD,CAAYiE,GAAI,CAAEmJ,GAAI,GAAtB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOzC,OAAK,EAACb,KAAK,WAAW3G,UAAW3I,KACxC,eAAC,IAAD,CAAOsP,KAAK,eAAe3G,UAAWkE,KACtC,eAAC,IAAD,CAAOyC,KAAK,SAAS3G,UAAWvD,KAChC,eAAC,IAAD,CAAOkK,KAAK,WAAW3G,UAAWoF,KAClC,eAAC,IAAD,CAAOuB,KAAK,gBAAgB3G,UAAW8H,KACvC,eAAC,IAAD,CAAOnB,KAAK,UAAU3G,UAAWkJ,KACjC,eAAC4B,GAAD,CAAcnE,KAAK,YAAY3G,UAAWuS,KAC1C,eAACzH,GAAD,CAAcnE,KAAK,UAAU3G,UAAWjE,KACxC,eAAC+O,GAAD,CAAchV,MAAO,CAAC,SAAU6Q,KAAK,aAAa3G,UAAW0U,KAC7D,eAAC,IAAD,CAAO/N,KAAK,SAAS3G,UAAWmJ,KAChC,eAAC,IAAD,CAAOxC,KAAK,YAAY3G,UAAWwK,KACnC,eAAC,IAAD,CAAOxK,UAAWgE,iBCjEf+R,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBrb,MAAK,YAAkD,IAA/Csb,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCGDpgB,I,cAAU2gB,gBAEvBC,IAASvL,OACP,eAAC,IAAMwL,WAAP,UACE,eAAC,IAAD,CAAQ7gB,QAASA,GAAjB,SACE,eAAC,IAAD,CAAUkD,MAAOA,GAAjB,SACE,eAAC,GAAD,UAIN5G,SAASwkB,eAAe,SAM1BX,O","file":"static/js/main.885616a9.chunk.js","sourcesContent":["export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","export function getCookie(key: string) {\n  const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n  return b ? b.pop() : \"\";\n}\n\nexport function currencyFormat(amount: number) {\n  return '$' + (amount/100).toFixed(2);\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/basket\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasketAsync',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false;\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\n    'basket/addBasketItemAsync',\n    async ({productId, quantity = 1}, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, \n    {productId: number, quantity: number, name?: string}>(\n    'basket/removeBasketItemAsync',\n    async ({productId, quantity}, thunkAPI) => {\n        try {\n            await agent.Basket.removeItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state, action) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state) => {\n            state.basket = null;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const {productId, quantity} = action.meta.arg;\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n            if (itemIndex === -1 || itemIndex === undefined) return;\n            state.basket!.items[itemIndex].quantity -= quantity;\n            if (state.basket?.items[itemIndex].quantity === 0) \n                state.basket.items.splice(itemIndex, 1);\n            state.status = 'idle';\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload;\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues>(\n    'account/signInUser',\n    async (data, thunkAPI) => {\n        try {\n            const userDto = await agent.Account.login(data);\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    }\n)\n\nexport const fetchCurrentUser = createAsyncThunk<User>(\n    'account/fetchCurrentUser',\n    async (_, thunkAPI) => {\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\n        try {\n            const userDto = await agent.Account.currentUser();\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!localStorage.getItem('user')) return false;\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        signOut: (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            history.push('/');\n        },\n        setUser: (state, action) => {\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles};\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            toast.error('Session expired - please login again');\n            history.push('/');\n        });\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles};\n        });\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\n            throw action.payload;\n        })\n    })\n})\n\nexport const {signOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdapter = createEntityAdapter<Product>();\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy);\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\n        try {\n            const response = await agent.Catalog.list(params);\n            thunkAPI.dispatch(setMetaData(response.metaData));\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdapter.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\n        },\n        setPageNumber: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload};\n        },\n        setMetaData: (state, action) => {\n            state.metaData = action.payload;\n        },\n        resetProductParams: (state) => {\n            state.productParams = initParams();\n        },\n        setProduct: (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.productsLoaded = false;\n        },\n        removeProduct: (state, action) => {\n            productsAdapter.removeOne(state, action.payload);\n            state.productsLoaded = false;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts';\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdapter.setAll(state, action.payload);\n            state.status = 'idle';\n            state.productsLoaded = true;\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct';\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters';\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands;\n            state.types = action.payload.types;\n            state.filtersLoaded = true;\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            state.status = 'idle';\n            console.log(action.payload);\n        })\n    })\n})\n\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\n\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber, setProduct, removeProduct} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'YARC (yet another redux counter with redux toolkit)'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        }\n    }\n})\n\nexport const {increment, decrement} = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { basketSlice } from \"../../features/basket/basketSlice\";\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\nimport { counterSlice } from \"../../features/contact/counterSlice\";\n\n// export function configureStore() {\n//     return createStore(counterReducer);\n// }\n\nexport const store = configureStore({\nreducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep();\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\n        return response;\n    }\n    return response;\n}, (error: AxiosError) => {\n    const { data, status } = error.response!;\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat();\n            }\n            toast.error(data.title);\n            break;\n        case 401:\n            toast.error(data.title);\n            break;\n        case 403:\n            toast.error('You are not allowed to do that!');\n            break;\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: {error: data}\n            });\n            break;\n        default:\n            break;\n    }\n    return Promise.reject(error.response);\n})\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\n        headers: {'Content-type': 'multipart/form-data'}\n    }).then(responseBody),\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\n        headers: {'Content-type': 'multipart/form-data'}\n    }).then(responseBody)\n}\n\nfunction createFormData(item: any) {\n    let formData = new FormData();\n    for (const key in item) {\n        formData.append(key, item[key])\n    }\n    return formData;\n}\n\nconst Admin = {\n    createProduct: (product: any) => requests.postForm('products', createFormData(product)),\n    updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\n    deleteProduct: (id: number) => requests.delete(`products/${id}`)\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params),\n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/unauthorised'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error'),\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n}\n\nconst Orders = {\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (values: any) => requests.post('orders', values)\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders,\n    Payments,\n    Admin\n}\n\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getValidationError() {\n        agent.TestErrors.getValidationError()\n            .then(() => console.log('should not see this'))\n            .catch(error => setValidationErrors(error));\n    }\n\n    return (\n        <Container>\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\n            <ButtonGroup fullWidth>\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\n            </ButtonGroup>\n            {validationErrors.length > 0 && \n                <Alert severity='error'>\n                    <AlertTitle>Validation Errors</AlertTitle>\n                    <List>\n                        {validationErrors.map(error => (\n                            <ListItem key={error}>\n                                <ListItemText>{error}</ListItemText>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Alert>\n            } \n        </Container>\n    )\n}","import { Typography, Pagination } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport { MetaData } from \"../models/pagination\";\n\ninterface Props {\n    metaData: MetaData;\n    onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({metaData, onPageChange}: Props) {\n    const {currentPage, totalCount, totalPages, pageSize} = metaData;\n    const [pageNumber, setPageNumber] = useState(currentPage);\n\n    function handlePageChange(page: number) {\n        setPageNumber(page);\n        onPageChange(page);\n    } \n\n    return (\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n            <Typography>\n                Displaying {(currentPage-1)*pageSize+1}-\n                {currentPage*pageSize > totalCount \n                    ? totalCount \n                    : currentPage*pageSize} of {totalCount} items\n            </Typography>\n            <Pagination\n                color='secondary'\n                size='large'\n                count={totalPages}\n                page={pageNumber}\n                onChange={(e, page) => handlePageChange(page)}\n            />\n        </Box>\n    )\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[];\n    onChange: (items: string[]) => void;\n}\n\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\n    const [checkedItems, setCheckedItems] = useState(checked || []);\n\n    function handleChecked(value: string) {\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        let newChecked: string[] = [];\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\n        else newChecked = checkedItems.filter(item => item !== value);\n        setCheckedItems(newChecked);\n        onChange(newChecked);\n    }\n\n    return (\n        <FormGroup>\n            {items.map(item => (\n                <FormControlLabel \n                    control={<Checkbox \n                        checked={checkedItems.indexOf(item) !== -1}\n                        onClick={() => handleChecked(item)}\n                    />} \n                    label={item} \n                    key={item} \n                />\n            ))}\n        </FormGroup>\n    )\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup onChange={onChange} value={selectedValue}>\n                {options.map(({ value, label }) => (\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n                ))}\n            </RadioGroup>\n        </FormControl>\n    )\n}","import { useEffect } from \"react\";\nimport { productSelectors, fetchProductsAsync, fetchFilters } from \"../../features/catalog/catalogSlice\";\nimport { useAppSelector, useAppDispatch } from \"../store/configureStore\";\n\nexport default function useProducts() {\n    const products = useAppSelector(productSelectors.selectAll);\n    const { productsLoaded, filtersLoaded, brands, types, metaData } = useAppSelector(state => state.catalog);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!productsLoaded) dispatch(fetchProductsAsync());\n    }, [productsLoaded, dispatch])\n\n    useEffect(() => {\n        if (!filtersLoaded) dispatch(fetchFilters());\n    }, [filtersLoaded, dispatch]);\n\n    return {\n        products,\n        productsLoaded,\n        filtersLoaded,\n        brands,\n        types,\n        metaData\n    }\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\ninterface Props {\n    message?: string;\n}\n\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color='secondary' />\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\n                    {message}\n                </Typography>\n            </Box>\n        </Backdrop>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n    product: Product\n}\n\nexport default function ProductCard({ product }: Props) {\n    const {status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n\n    return (\n        <Card>\n            <CardHeader\n                avatar={\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\n                        {product.name.charAt(0).toUpperCase()}\n                    </Avatar>\n                }\n                title={product.name}\n                titleTypographyProps={{\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\n                }}\n            />\n            <CardMedia\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\n                image={product.pictureUrl}\n                title={product.name}\n            />\n            <CardContent>\n                <Typography gutterBottom color='secondary' variant=\"h5\">\n                    {currencyFormat(product.price)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {product.brand} / {product.type}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <LoadingButton\n                    loading={status.includes('pendingAddItem' + product.id)}\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\n                    size=\"small\">\n                    Add to cart\n                </LoadingButton>\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\n            </CardActions>\n        </Card>\n    )\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@mui/material\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from \"@mui/material\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n    products: Product[];\n}\n\nexport default function ProductList({ products }: Props) {\n    const { productsLoaded } = useAppSelector(state => state.catalog);\n    return (\n        <Grid container spacing={4}>\n            {products.map(product => (\n                <Grid item xs={4} key={product.id}>\n                    {!productsLoaded ? (\n                        <ProductCardSkeleton />\n                    ) : (\n                        <ProductCard product={product} />\n                    )}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import { debounce, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n    const {productParams} = useAppSelector(state => state.catalog);\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\n    const dispatch = useAppDispatch();\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({searchTerm: event.target.value}))\n    }, 1000)\n\n    return (\n        <TextField\n            label='Search products'\n            variant='outlined'\n            fullWidth\n            value={searchTerm || ''}\n            onChange={(event: any) => {\n                setSearchTerm(event.target.value);\n                debouncedSearch(event);\n            }}\n        />\n    )\n}","import { Grid, Paper } from \"@mui/material\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setPageNumber, setProductParams } from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProductSearch from \"./ProductSearch\";\n\nconst sortOptions = [\n    { value: 'name', label: 'Alphabetical' },\n    { value: 'priceDesc', label: 'Price - High to low' },\n    { value: 'price', label: 'Price - Low to high' },\n]\n\nexport default function Catalog() {\n    const {products, brands, types, filtersLoaded, metaData} = useProducts();\n    const { productParams,  } = useAppSelector(state => state.catalog);\n    const dispatch = useAppDispatch();\n\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\n\n    return (\n        <Grid container columnSpacing={4}>\n            <Grid item xs={3}>\n                <Paper sx={{ mb: 2 }}>\n                    <ProductSearch />\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <RadioButtonGroup\n                        selectedValue={productParams.orderBy}\n                        options={sortOptions}\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\n                    />\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons\n                        items={brands}\n                        checked={productParams.brands}\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\n                    />\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons\n                        items={types}\n                        checked={productParams.types}\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\n                    />\n                </Paper>\n            </Grid>\n            <Grid item xs={9}>\n                <ProductList products={products} />\n            </Grid>\n            <Grid item xs={3} />\n            <Grid item xs={9} sx={{mb: 2}}>\n                {metaData &&\n                <AppPagination \n                    metaData={metaData}\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\n                />}\n            </Grid>\n        </Grid>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <Container component={Paper} sx={{height: 400}}>\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\n        </Container>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync, removeBasketItemAsync  } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n    const {basket, status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    const {id} = useParams<{id: string}>();\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\n    const {status: productStatus} = useAppSelector(state => state.catalog);\n    const [quantity, setQuantity] = useState(0);\n    const item = basket?.items.find(i => i.productId === product?.id);\n\n    useEffect(() => {\n        if (item) setQuantity(item.quantity);\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\n    }, [id, item, dispatch, product]);\n\n    function handleInputChange(event: any) {\n        if (event.target.value > 0) {\n            setQuantity(parseInt(event.target.value));\n        }\n    }\n\n    function handleUpdateCart() {\n        if (!item || quantity > item.quantity) {\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        } else {\n            const updatedQuantity = item.quantity - quantity;\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        }\n    }\n\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\n\n    if (!product) return <NotFound />\n\n    return (\n        <Grid container spacing={6}>\n            <Grid item xs={6}>\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant='h3'>{product.name}</Typography>\n                <Divider sx={{mb: 2}} />\n                <Typography variant='h4' color='secondary'>${(product.price / 100).toFixed(2)}</Typography>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>{product.name}</TableCell>\n                            </TableRow>    \n                            <TableRow>\n                                <TableCell>Description</TableCell>\n                                <TableCell>{product.description}</TableCell>\n                            </TableRow>  \n                            <TableRow>\n                                <TableCell>Type</TableCell>\n                                <TableCell>{product.type}</TableCell>\n                            </TableRow>  \n                            <TableRow>\n                                <TableCell>Brand</TableCell>\n                                <TableCell>{product.brand}</TableCell>\n                            </TableRow>  \n                            <TableRow>\n                                <TableCell>Quantity in stock</TableCell>\n                                <TableCell>{product.quantityInStock}</TableCell>\n                            </TableRow>  \n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <TextField \n                            variant='outlined'\n                            type='number'\n                            label='Quantity in Cart'\n                            fullWidth\n                            value={quantity}\n                            onChange={handleInputChange}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <LoadingButton\n                            disabled={item?.quantity === quantity}\n                            loading={status.includes('pending')}\n                            onClick={handleUpdateCart}\n                            sx={{height: '55px'}}\n                            color='primary'\n                            size='large'\n                            variant='contained'\n                            fullWidth\n                        >\n                            {item ? 'Update Quantity' : 'Add to Cart'}\n                        </LoadingButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { decrement, increment } from \"./counterSlice\";\n\nexport default function ContactPage() {\n    const dispatch = useAppDispatch();\n    const { data, title } = useAppSelector(state => state.counter);\n\n    return (\n        <>\n            <Typography variant='h2'>\n                {title}\n            </Typography>\n            <Typography variant='h5'>\n                The data is: {data}\n            </Typography>\n            <ButtonGroup>\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>Increment by 5</Button>\n            </ButtonGroup>\n        </>\n\n    )\n}","import { Box, Typography } from \"@mui/material\";\nimport Slider from \"react-slick\";\n\nexport default function HomePage() {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n    };\n\n    return (\n        <>\n            <Slider {...settings}>\n                <div>\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n            </Slider>\n            <Box display='flex' justifyContent='center' sx={{p: 4}} >\n                <Typography variant='h1'>Welcome to the store</Typography>\n            </Box>\n        </>\n    )\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function SignedInMenu() {\n    const dispatch = useAppDispatch();\n    const { user } = useAppSelector(state => state.account);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                color='inherit'\n                onClick={handleClick}\n                sx={{ typography: 'h6' }}\n            >\n                {user?.email}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\n                <MenuItem onClick={() => {\n                    dispatch(signOut());\n                    dispatch(clearBasket());\n                }}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n}","import { ShoppingCart } from \"@mui/icons-material\";\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignedInMenu from \"./SignedInMenu\";\n\ninterface Props {\n    darkMode: boolean;\n    handleThemeChange: () => void;\n}\n\nconst midLinks = [\n    { title: 'catalog', path: '/catalog' },\n    { title: 'about', path: '/about' },\n    { title: 'contact', path: '/contact' }\n]\n\nconst rightLinks = [\n    { title: 'login', path: '/login' },\n    { title: 'register', path: '/register' }\n]\n\nconst navStyles = {\n    color: 'inherit',\n    textDecoration: 'none',\n    typography: 'h6',\n    '&:hover': {\n        color: 'grey.500'\n    },\n    '&.active': {\n        color: 'text.secondary'\n    }\n}\n\nexport default function Header({ darkMode, handleThemeChange }: Props) {\n    const { basket } = useAppSelector(state => state.basket);\n    const { user } = useAppSelector(state => state.account);\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\n\n    return (\n        <AppBar position='static'>\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Box display='flex' alignItems='center'>\n                    <Typography variant='h6' component={NavLink} exact to='/'\n                        sx={navStyles}>\n                        RE-STORE\n                    </Typography>\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\n                </Box>\n                <List sx={{ display: 'flex' }}>\n                    {midLinks.map(({ title, path }) => (\n                        <ListItem\n                            component={NavLink}\n                            to={path}\n                            key={path}\n                            sx={navStyles}\n                        >\n                            {title.toUpperCase()}\n                        </ListItem>\n                    ))}\n                    {user && user.roles?.includes('Admin') &&\n                    <ListItem\n                        component={NavLink}\n                        to={'/inventory'}\n                        sx={navStyles}\n                    >\n                        INVENTORY\n                    </ListItem>}\n                </List>\n                <Box display='flex' alignItems='center'>\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\n                        <Badge badgeContent={itemCount} color='secondary'>\n                            <ShoppingCart />\n                        </Badge>\n                    </IconButton>\n                    {user ? (\n                        <SignedInMenu />\n                    ) : (\n                        <List sx={{ display: 'flex' }}>\n                            {rightLinks.map(({ title, path }) => (\n                                <ListItem\n                                    component={NavLink}\n                                    to={path}\n                                    key={path}\n                                    sx={navStyles}\n                                >\n                                    {title.toUpperCase()}\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Box>\n            </Toolbar>\n        </AppBar>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router\";\n\nexport default function ServerError() {\n    const history = useHistory();\n    const { state } = useLocation<any>();\n\n    return (\n        <Container component={Paper}>\n            {state?.error ? (\n                <>\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\n                    <Divider />\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\n                </>\n            ) : (\n                <Typography variant='h5' gutterBottom>Server Error</Typography>\n            )}\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\n        </Container>\n    )\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    subtotal?: number;\n}\n\nexport default function BasketSummary({subtotal}: Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    if (subtotal === undefined)\n       subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[];\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({ items, isBasket = true }: Props) {\n    const { status } = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Product</TableCell>\n                        <TableCell align=\"right\">Price</TableCell>\n                        <TableCell align=\"center\">Quantity</TableCell>\n                        <TableCell align=\"right\">Subtotal</TableCell>\n                        {isBasket &&\n                            <TableCell align=\"right\"></TableCell>}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {items.map(item => (\n                        <TableRow\n                            key={item.productId}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Box display='flex' alignItems='center'>\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\n                                    <span>{item.name}</span>\n                                </Box>\n                            </TableCell>\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\n                            <TableCell align=\"center\">\n                                {isBasket &&\n                                    <LoadingButton\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))}\n                                        color='error'\n                                    >\n                                        <Remove />\n                                    </LoadingButton>}\n                                {item.quantity}\n                                {isBasket &&\n                                    <LoadingButton\n                                        loading={status === 'pendingAddItem' + item.productId}\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\n                                        color='secondary'\n                                    >\n                                        <Add />\n                                    </LoadingButton>}\n                            </TableCell>\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\n                            {isBasket &&\n                                <TableCell align=\"right\">\n                                    <LoadingButton\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\n                                        color='error'\n                                    >\n                                        <Delete />\n                                    </LoadingButton>\n                                </TableCell>}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\nexport default function BasketPage() {\n    const { basket } = useAppSelector(state => state.basket);\n\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\n\n    return (\n        <>\n            <BasketTable items={basket.items} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n                    <Button\n                        component={Link}\n                        to='/checkout'\n                        variant='contained'\n                        size='large'\n                        fullWidth\n                    >\n                        Checkout\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n\n    )\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\nimport { signInUser } from './accountSlice';\n\nexport default function Login() {\n    const history = useHistory();\n    const location = useLocation<any>();\n    const dispatch = useAppDispatch();\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    });\n\n    async function submitForm(data: FieldValues) {\n        try {\n            await dispatch(signInUser(data));\n            history.push(location.state?.from?.pathname ||  '/catalog');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Username\"\n                    autoFocus\n                    {...register('username', { required: 'Username is required' })}\n                    error={!!errors.username}\n                    helperText={errors?.username?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    {...register('password', { required: 'Password is required' })}\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                />\n                <LoadingButton\n                    disabled={!isValid}\n                    loading={isSubmitting}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Sign In\n                </LoadingButton>\n                <Grid container>\n                    <Grid item>\n                        <Link to='/register'>\n                            {\"Don't have an account? Sign Up\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\nexport default function Register() {\n    const history = useHistory();\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    });\n\n    function handleApiErrors(errors: any) {\n        if (errors) {\n            errors.forEach((error: string) => {\n                if (error.includes('Password')) {\n                    setError('password', { message: error })\n                } else if (error.includes('Email')) {\n                    setError('email', { message: error })\n                } else if (error.includes('Username')) {\n                    setError('username', { message: error })\n                }\n            });\n        }\n    }\n\n    return (\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Register\n            </Typography>\n            <Box component=\"form\"\n                onSubmit={handleSubmit((data) =>\n                    agent.Account.register(data)\n                        .then(() => {\n                            toast.success('Registration successful - you can now login');\n                            history.push('/login');\n                        })\n                        .catch(error => handleApiErrors(error))\n                )}\n                noValidate sx={{ mt: 1 }}\n            >\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Username\"\n                    autoFocus\n                    {...register('username', { required: 'Username is required' })}\n                    error={!!errors.username}\n                    helperText={errors?.username?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Email address\"\n                    {...register('email', { \n                        required: 'Email is required',\n                        pattern: {\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*)).[a-z]{2,3}$/,\n                            message: 'Not a valid email address'\n                        } \n                    })}\n                    error={!!errors.email}\n                    helperText={errors?.email?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    {...register('password', { \n                        required: 'Password is required',\n                        pattern: {\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n                            message: 'Password is not complex enough'\n                        }\n                    })}\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                />\n                <LoadingButton\n                    disabled={!isValid}\n                    loading={isSubmitting}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </LoadingButton>\n                <Grid container>\n                    <Grid item>\n                        <Link to='/login'>\n                            {\"Already have an account? Sign In\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\n  roles?: string[];\n}\n\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\n  const { user } = useAppSelector(state => state.account);\n  return (\n    <Route {...rest} render={props => {\n      if (!user) {\n        return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n      }\n\n      if (roles && !roles?.some(r => user.roles?.includes(r))) {\n        toast.error('Not authorised to access this area');\n        return <Redirect to={{ pathname: \"/catalog\" }} />\n      }\n\n      return <Component {...props} />\n    }}\n    />\n  );\n}\n","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary subtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetailed from \"./OrderDetailed\";\n\nexport default function Orders() {\n    const [orders, setOrders] = useState<Order[] | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\n\n    useEffect(() => {\n        agent.Orders.list()\n            .then(orders => setOrders(orders))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }, [])\n\n    if (loading) return <LoadingComponent message='Loading orders' />\n\n    if (selectedOrderNumber > 0) return (\n        <OrderDetailed \n            order={orders?.find(o => o.id === selectedOrderNumber)!}\n            setSelectedOrder={setSelectedOrderNumber}\n        />\n    )\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Order number</TableCell>\n                        <TableCell align=\"right\">Total</TableCell>\n                        <TableCell align=\"right\">Order Date</TableCell>\n                        <TableCell align=\"right\">Order Status</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders?.map((order) => (\n                        <TableRow\n                            key={order.id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {order.id}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\n                                    View\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    multiline?: boolean;\n    rows?: number;\n    type?: string;\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n        <TextField \n            {...props}\n            {...field}\n            multiline={props.multiline}\n            rows={props.rows}\n            type={props.type}\n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\"\n\ninterface Props extends UseControllerProps {\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n    const {field} = useController({...props, defaultValue: false});\n    return (\n        <FormControlLabel \n            control={\n                <Checkbox \n                    {...field}\n                    checked={field.value}\n                    color='secondary'\n                    disabled={props.disabled}\n                />\n            }\n            label={props.label}\n        />\n    )\n}","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport AppCheckbox from '../../app/components/AppCheckbox';\n\nexport default function AddressForm() {\n    const { control, formState } = useFormContext();\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Shipping address\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12}>\n                    <AppTextInput control={control} name='fullName' label='Full name' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput control={control} name='address1' label='Address line 1' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput control={control} name='address2' label='Address line 2' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='city' label='City' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='state' label='State' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='zip' label='Zipcode' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='country' label='Country' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppCheckbox \n                        disabled={!formState.isDirty}\n                        name='saveAddress' \n                        label='Save this as the default address' \n                        control={control} \n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import { InputBaseComponentProps } from \"@mui/material\";\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\n\ninterface Props extends InputBaseComponentProps {}\n\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, \n    ref: Ref<unknown>){\n        const elementRef = useRef<any>();\n\n        useImperativeHandle(ref, () => ({\n            focus: () => elementRef.current.focus\n        }));\n\n        return (\n            <Component \n                onReady={(element: any) => elementRef.current = element}\n                {...props}\n            />\n        )\n    });","import Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\nimport { StripeInput } from './StripeInput';\nimport { StripeElementType } from '@stripe/stripe-js';\n\ninterface Props {\n  cardState: { elementError: { [key in StripeElementType]?: string } };\n  onCardInputChange: (event: any) => void;\n}\n\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\n  const { control } = useFormContext();\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardNumber}\n            helperText={cardState.elementError.cardNumber}\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardNumberElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardExpiry}\n            helperText={cardState.elementError.cardExpiry}\n            id=\"expDate\"\n            label=\"Expiry date\"\n            fullWidth\n            autoComplete=\"cc-exp\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardExpiryElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardCvc}\n            helperText={cardState.elementError.cardCvc}\n            id=\"cvv\"\n            label=\"CVV\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardCvcElement\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}","import { Grid } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\nexport default function Review() {\n  const {basket} = useAppSelector(state => state.basket);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket &&\n      <BasketTable items={basket.items} isBasket={false} />}\n      <Grid container>\n        <Grid item xs={6} />\n        <Grid item xs={6}>\n          <BasketSummary />\n        </Grid>\n      </Grid>\n    </>\n  );\n}","import * as yup from 'yup';\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required('Full name is required'),\n        address1: yup.string().required('Addres line 1 is required'),\n        address2: yup.string().required(),\n        city: yup.string().required(),\n        state: yup.string().required(),\n        zip: yup.string().required(),\n        country: yup.string().required(),\n    }),\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required()\n    })\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { validationSchema } from \"./checkoutValidation\";\nimport agent from \"../../app/api/agent\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\nexport default function CheckoutPage() {\n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch();\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\n    const [paymentMessage, setPaymentMessage] = useState('');\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\n    const { basket } = useAppSelector(state => state.basket);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    function onCardInputChange(event: any) {\n        setCardState({\n            ...cardState,\n            elementError: {\n                ...cardState.elementError,\n                [event.elementType]: event.error?.message\n            }\n        })\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <AddressForm />;\n            case 1:\n                return <Review />;\n            case 2:\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const currentValidationSchema = validationSchema[activeStep];\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    });\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if (response) {\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\n                }\n            })\n    }, [methods])\n\n    async function submitOrder(data: FieldValues) {\n        setLoading(true);\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\n        if (!stripe || !elements) return; // stripe not ready\n        try {\n            const cardElement = elements.getElement(CardNumberElement);\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n                payment_method: {\n                    card: cardElement!,\n                    billing_details: {\n                        name: nameOnCard\n                    }\n                }\n            });\n            console.log(paymentResult);\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\n                setOrderNumber(orderNumber);\n                setPaymentSucceeded(true);\n                setPaymentMessage('Thank you - we have received your payment');\n                setActiveStep(activeStep + 1);\n                dispatch(clearBasket());\n                setLoading(false);\n            } else {\n                setPaymentMessage(paymentResult.error?.message!);\n                setPaymentSucceeded(false);\n                setLoading(false);\n                setActiveStep(activeStep + 1);\n            }\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    }\n\n\n    const handleNext = async (data: FieldValues) => {\n        if (activeStep === steps.length - 1) {\n            await submitOrder(data);\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        if (activeStep === steps.length - 1) {\n            return !cardComplete.cardCvc\n                || !cardComplete.cardExpiry\n                || !cardComplete.cardNumber\n                || !methods.formState.isValid\n        } else {\n            return !methods.formState.isValid\n        }\n    }\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <>\n                    {activeStep === steps.length ? (\n                        <>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {paymentMessage}\n                            </Typography>\n                            {paymentSucceeded ? (\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #{orderNumber}. We have not emailed your order\n                                    confirmation, and will not send you an update when your order has\n                                    shipped as this is a fake store!\n                                </Typography>\n                            ) : (\n                                <Button variant='contained' onClick={handleBack}>\n                                    Go back and try again\n                                </Button>\n                            )}\n\n                        </>\n                    ) : (\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\n                            {getStepContent(activeStep)}\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                                        Back\n                                    </Button>\n                                )}\n                                <LoadingButton\n                                    loading={loading}\n                                    disabled={submitDisabled()}\n                                    variant=\"contained\"\n                                    type='submit'\n                                    sx={{ mt: 3, ml: 1 }}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                </LoadingButton>\n                            </Box>\n                        </form>\n                    )}\n                </>\n            </Paper>\n        </FormProvider>\n\n    );\n}\n","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe(\"pk_test_51IzwHFErFg8RLNropkfWpnL37TzyR3eTpn0vY0EmatAeBwxlNPFJT2e2VtfIt2V8975y2W7kC1gcQ5tB5B332Y2x00yktsLIxN\")\n\nexport default function CheckoutWrapper() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        agent.Payments.createPaymentIntent()\n            .then(basket => dispatch(setBasket(basket)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }, [dispatch]);\n\n    if (loading) return <LoadingComponent message='Loading checkout...' />\n\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutPage />\n        </Elements>\n    )\n}","import { UploadFile } from '@mui/icons-material';\nimport { FormControl, FormHelperText, Typography } from '@mui/material';\nimport { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { useController, UseControllerProps } from 'react-hook-form'\n\ninterface Props extends UseControllerProps { }\n\nexport default function AppDropzone(props: Props) {\n    const { fieldState, field } = useController({ ...props, defaultValue: null });\n\n    const dzStyles = {\n        display: 'flex',\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        alignItems: 'center',\n        height: 200,\n        width: 500\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback(acceptedFiles => {\n        acceptedFiles[0] = Object.assign(acceptedFiles[0], \n            {preview: URL.createObjectURL(acceptedFiles[0])});\n        field.onChange(acceptedFiles[0]);\n    }, [field])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()}>\n            <FormControl error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\n                <input {...getInputProps()} />\n                <UploadFile sx={{fontSize: '100px'}} />\n                <Typography variant='h4'>Drop image here</Typography>\n                <FormHelperText>{fieldState.error?.message}</FormHelperText> \n            </FormControl>\n        </div>\n    )\n}","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n    items: string[];\n}\n\nexport default function AppSelectList(props: Props) {\n    const { fieldState, field } = useController({ ...props, defaultValue: '' });\n    return (\n        <FormControl fullWidth error={!!fieldState.error}>\n            <InputLabel>{props.label}</InputLabel>\n            <Select\n                value={field.value}\n                label={props.label}\n                onChange={field.onChange}\n            >\n                {props.items.map((item, index) => (\n                    <MenuItem key={index} value={item}>{item}</MenuItem>\n                ))}\n            </Select>\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\n        </FormControl>\n    )\n}","import * as yup from 'yup';\n\nexport const validationSchema = yup.object({\n    name: yup.string().required(),\n    brand: yup.string().required(),\n    type: yup.string().required(),\n    price: yup.number().required().moreThan(100),\n    quantityInStock: yup.number().required().min(0),\n    description: yup.string().required(),\n    file: yup.mixed().when('pictureUrl', {\n        is: (value: string) => !value,\n        then: yup.mixed().required('Please provide an image')\n    })\n})","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport AppDropzone from \"../../app/components/AppDropzone\";\nimport AppSelectList from \"../../app/components/AppSelectList\";\nimport AppTextInput from \"../../app/components/AppTextInput\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport { Product } from \"../../app/models/product\";\nimport {yupResolver} from '@hookform/resolvers/yup';\nimport { validationSchema } from \"./productValidation\";\nimport agent from \"../../app/api/agent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setProduct } from \"../catalog/catalogSlice\";\nimport { LoadingButton } from \"@mui/lab\";\n\ninterface Props {\n    product?: Product;\n    cancelEdit: () => void;\n}\n\nexport default function ProductForm({ product, cancelEdit }: Props) {\n    const { control, reset, handleSubmit, watch, formState: {isDirty, isSubmitting} } = useForm({\n        mode: 'all',\n        resolver: yupResolver<any>(validationSchema)\n    });\n    const { brands, types } = useProducts();\n    const watchFile = watch('file', null);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (product && !watchFile  && !isDirty) reset(product);\n        return () => {\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\n        }\n    }, [product, reset, watchFile, isDirty]);\n\n    async function handleSubmitData(data: FieldValues) {\n        try {\n            let response: Product;\n            if (product) {\n                response = await agent.Admin.updateProduct(data);\n            } else {\n                response = await agent.Admin.createProduct(data);\n            }\n            dispatch(setProduct(response));\n            cancelEdit();\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <Box component={Paper} sx={{ p: 4 }}>\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\n                Product Details\n            </Typography>\n            <form onSubmit={handleSubmit(handleSubmitData)}>\n                <Grid container spacing={3}>  \n                    <Grid item xs={12} sm={12}>\n                        <AppTextInput control={control} name='name' label='Product name' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppSelectList items={brands} control={control} name='brand' label='Brand' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppSelectList items={types} control={control} name='type' label='Type' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppTextInput type='number' control={control} name='price' label='Price' />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <AppTextInput type='number' control={control} name='quantityInStock' label='Quantity in Stock' />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <AppTextInput multiline={true} rows={4} control={control} name='description' label='Description' />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box display='flex' justifyContent='space-between' alignItems='center'>\n                            <AppDropzone control={control} name='file' />\n                            {watchFile ? (\n                                <img src={watchFile.preview} alt='preview' style={{maxHeight: 200}} />\n                            ) : (\n                                <img src={product?.pictureUrl} alt={product?.name} style={{maxHeight: 200}} />\n                            )}\n                        </Box>\n\n                    </Grid>\n                </Grid>\n                <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\n                    <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\n                    <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>Submit</LoadingButton>\n                </Box>\n            </form>\n        </Box>\n    )\n}","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\nimport { Edit, Delete } from \"@mui/icons-material\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport useProducts from \"../../app/hooks/useProducts\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\nimport { useState } from \"react\";\nimport ProductForm from \"./ProductForm\";\nimport { Product } from \"../../app/models/product\";\nimport agent from \"../../app/api/agent\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function Inventory() {\n    const {products, metaData} = useProducts();\n    const dispatch = useAppDispatch();\n    const [editMode, setEditMode] = useState(false);\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined);\n    const [loading, setLoading] = useState(false);\n    const [target, setTarget] = useState(0);\n\n    function handleSelectProduct(product: Product) {\n        setSelectedProduct(product);\n        setEditMode(true);\n    }\n\n    function handleDeleteProduct(id: number) {\n        setLoading(true);\n        setTarget(id);\n        agent.Admin.deleteProduct(id)\n            .then(() => dispatch(removeProduct(id)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }\n\n    function cancelEdit() {\n        if (selectedProduct) setSelectedProduct(undefined);\n        setEditMode(false);\n    }\n\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\n\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\n                <Button onClick={() => setEditMode(true)} sx={{ m: 2 }} size='large' variant='contained'>Create</Button>\n            </Box>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>#</TableCell>\n                            <TableCell align=\"left\">Product</TableCell>\n                            <TableCell align=\"right\">Price</TableCell>\n                            <TableCell align=\"center\">Type</TableCell>\n                            <TableCell align=\"center\">Brand</TableCell>\n                            <TableCell align=\"center\">Quantity</TableCell>\n                            <TableCell align=\"right\"></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {products.map((product) => (\n                            <TableRow\n                                key={product.id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {product.id}\n                                </TableCell>\n                                <TableCell align=\"left\">\n                                    <Box display='flex' alignItems='center'>\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\n                                        <span>{product.name}</span>\n                                    </Box>\n                                </TableCell>\n                                <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\n                                <TableCell align=\"center\">{product.type}</TableCell>\n                                <TableCell align=\"center\">{product.brand}</TableCell>\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\n                                <TableCell align=\"right\">\n                                    <Button onClick={() => handleSelectProduct(product)} startIcon={<Edit />} />\n                                    <LoadingButton \n                                        loading={loading && target === product.id} \n                                        startIcon={<Delete />} color='error' \n                                        onClick={() => handleDeleteProduct(product.id)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {metaData && \n                <Box sx={{pt: 2}}>\n                    <AppPagination \n                        metaData={metaData} \n                        onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\n                    />\n                </Box>\n            }\n        </>\n    )\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light'\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initialising app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container  sx={{ mt: 4 }}>\n          <Switch>\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <PrivateRoute roles={['Admin']} path='/inventory' component={Inventory} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}