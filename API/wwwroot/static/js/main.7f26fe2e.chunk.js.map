{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","item","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f26fe2e.chunk.js","sourcesContent":["export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T;\n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","export function getCookie(key: string) {\n  const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n  return b ? b.pop() : \"\";\n}\n\nexport function currencyFormat(amount: number) {\n  return '$' + (amount/100).toFixed(2);\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/basket\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasketAsync',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false;\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\n    'basket/addBasketItemAsync',\n    async ({productId, quantity = 1}, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, \n    {productId: number, quantity: number, name?: string}>(\n    'basket/removeBasketItemAsync',\n    async ({productId, quantity}, thunkAPI) => {\n        try {\n            await agent.Basket.removeItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state, action) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state) => {\n            state.basket = null;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const {productId, quantity} = action.meta.arg;\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n            if (itemIndex === -1 || itemIndex === undefined) return;\n            state.basket!.items[itemIndex].quantity -= quantity;\n            if (state.basket?.items[itemIndex].quantity === 0) \n                state.basket.items.splice(itemIndex, 1);\n            state.status = 'idle';\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload;\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { FieldValues } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport agent from \"../../app/api/agent\";\nimport { User } from \"../../app/models/user\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n}\n\nconst initialState: AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues>(\n    'account/signInUser',\n    async (data, thunkAPI) => {\n        try {\n            const userDto = await agent.Account.login(data);\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    }\n)\n\nexport const fetchCurrentUser = createAsyncThunk<User>(\n    'account/fetchCurrentUser',\n    async (_, thunkAPI) => {\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\n        try {\n            const userDto = await agent.Account.currentUser();\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!localStorage.getItem('user')) return false;\n        }\n    }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        signOut: (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            history.push('/');\n        },\n        setUser: (state, action) => {\n            state.user = action.payload;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            toast.error('Session expired - please login again');\n            history.push('/');\n        });\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n            state.user = action.payload;\n        });\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\n            throw action.payload;\n        })\n    })\n})\n\nexport const {signOut, setUser} = accountSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n}\n\nconst productsAdapter = createEntityAdapter<Product>();\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy);\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\n        try {\n            const response = await agent.Catalog.list(params);\n            thunkAPI.dispatch(setMetaData(response.metaData));\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: []\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdapter.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\n        },\n        setPageNumber: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload};\n        },\n        setMetaData: (state, action) => {\n            state.metaData = action.payload;\n        },\n        resetProductParams: (state) => {\n            state.productParams = initParams();\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts';\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdapter.setAll(state, action.payload);\n            state.status = 'idle';\n            state.productsLoaded = true;\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct';\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters';\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands;\n            state.types = action.payload.types;\n            state.filtersLoaded = true;\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            state.status = 'idle';\n            console.log(action.payload);\n        })\n    })\n})\n\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\n\nexport const {setProductParams, resetProductParams, setMetaData, setPageNumber} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'YARC (yet another redux counter with redux toolkit)'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload\n        },\n        decrement: (state, action) => {\n            state.data -= action.payload\n        }\n    }\n})\n\nexport const {increment, decrement} = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { basketSlice } from \"../../features/basket/basketSlice\";\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\nimport { counterSlice } from \"../../features/contact/counterSlice\";\n\n// export function configureStore() {\n//     return createStore(counterReducer);\n// }\n\nexport const store = configureStore({\nreducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep();\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\n        return response;\n    }\n    return response;\n}, (error: AxiosError) => {\n    const { data, status } = error.response!;\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat();\n            }\n            toast.error(data.title);\n            break;\n        case 401:\n            toast.error(data.title);\n            break;\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: {error: data}\n            });\n            break;\n        default:\n            break;\n    }\n    return Promise.reject(error.response);\n})\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params),\n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/unauthorised'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error'),\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n}\n\nconst Orders = {\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (values: any) => requests.post('orders', values)\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account,\n    Orders,\n    Payments\n}\n\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport agent from \"../../app/api/agent\";\n\nexport default function AboutPage() {\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getValidationError() {\n        agent.TestErrors.getValidationError()\n            .then(() => console.log('should not see this'))\n            .catch(error => setValidationErrors(error));\n    }\n\n    return (\n        <Container>\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\n            <ButtonGroup fullWidth>\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\n            </ButtonGroup>\n            {validationErrors.length > 0 && \n                <Alert severity='error'>\n                    <AlertTitle>Validation Errors</AlertTitle>\n                    <List>\n                        {validationErrors.map(error => (\n                            <ListItem key={error}>\n                                <ListItemText>{error}</ListItemText>\n                            </ListItem>\n                        ))}\n                    </List>\n                </Alert>\n            } \n        </Container>\n    )\n}","import { Typography, Pagination } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { MetaData } from \"../models/pagination\";\n\ninterface Props {\n    metaData: MetaData;\n    onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({metaData, onPageChange}: Props) {\n    const {currentPage, totalCount, totalPages, pageSize} = metaData;\n    return (\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n            <Typography>\n                Displaying {(currentPage-1)*pageSize+1}-\n                {currentPage*pageSize > totalCount \n                    ? totalCount \n                    : currentPage*pageSize} of {totalCount} items\n            </Typography>\n            <Pagination\n                color='secondary'\n                size='large'\n                count={totalPages}\n                page={currentPage}\n                onChange={(e, page) => onPageChange(page)}\n            />\n        </Box>\n    )\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[];\n    onChange: (items: string[]) => void;\n}\n\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\n    const [checkedItems, setCheckedItems] = useState(checked || []);\n\n    function handleChecked(value: string) {\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        let newChecked: string[] = [];\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\n        else newChecked = checkedItems.filter(item => item !== value);\n        setCheckedItems(newChecked);\n        onChange(newChecked);\n    }\n\n    return (\n        <FormGroup>\n            {items.map(item => (\n                <FormControlLabel \n                    control={<Checkbox \n                        checked={checkedItems.indexOf(item) !== -1}\n                        onClick={() => handleChecked(item)}\n                    />} \n                    label={item} \n                    key={item} \n                />\n            ))}\n        </FormGroup>\n    )\n}","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup onChange={onChange} value={selectedValue}>\n                {options.map(({ value, label }) => (\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\n                ))}\n            </RadioGroup>\n        </FormControl>\n    )\n}","import { Backdrop, CircularProgress, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\ninterface Props {\n    message?: string;\n}\n\nexport default function LoadingComponent({message = 'Loading...'}: Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color='secondary' />\n                <Typography variant='h4' sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>\n                    {message}\n                </Typography>\n            </Box>\n        </Backdrop>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\n\ninterface Props {\n    product: Product\n}\n\nexport default function ProductCard({ product }: Props) {\n    const {status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n\n    return (\n        <Card>\n            <CardHeader\n                avatar={\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\n                        {product.name.charAt(0).toUpperCase()}\n                    </Avatar>\n                }\n                title={product.name}\n                titleTypographyProps={{\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\n                }}\n            />\n            <CardMedia\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\n                image={product.pictureUrl}\n                title={product.name}\n            />\n            <CardContent>\n                <Typography gutterBottom color='secondary' variant=\"h5\">\n                    {currencyFormat(product.price)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                    {product.brand} / {product.type}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <LoadingButton\n                    loading={status.includes('pendingAddItem' + product.id)}\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\n                    size=\"small\">\n                    Add to cart\n                </LoadingButton>\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\n            </CardActions>\n        </Card>\n    )\n}","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@mui/material\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from \"@mui/material\";\nimport { Product } from \"../../app/models/product\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport ProductCard from \"./ProductCard\";\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\n\ninterface Props {\n    products: Product[];\n}\n\nexport default function ProductList({ products }: Props) {\n    const { productsLoaded } = useAppSelector(state => state.catalog);\n    return (\n        <Grid container spacing={4}>\n            {products.map(product => (\n                <Grid item xs={4} key={product.id}>\n                    {!productsLoaded ? (\n                        <ProductCardSkeleton />\n                    ) : (\n                        <ProductCard product={product} />\n                    )}\n                </Grid>\n            ))}\n        </Grid>\n    )\n}","import { debounce, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n    const {productParams} = useAppSelector(state => state.catalog);\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\n    const dispatch = useAppDispatch();\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({searchTerm: event.target.value}))\n    }, 1000)\n\n    return (\n        <TextField\n            label='Search products'\n            variant='outlined'\n            fullWidth\n            value={searchTerm || ''}\n            onChange={(event: any) => {\n                setSearchTerm(event.target.value);\n                debouncedSearch(event);\n            }}\n        />\n    )\n}","import { Grid, Paper } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\nimport ProductList from \"./ProductList\";\nimport ProductSearch from \"./ProductSearch\";\n\nconst sortOptions = [\n    { value: 'name', label: 'Alphabetical' },\n    { value: 'priceDesc', label: 'Price - High to low' },\n    { value: 'price', label: 'Price - Low to high' },\n]\n\nexport default function Catalog() {\n    const products = useAppSelector(productSelectors.selectAll);\n    const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } = useAppSelector(state => state.catalog);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        if (!productsLoaded) dispatch(fetchProductsAsync());\n    }, [productsLoaded, dispatch])\n\n    useEffect(() => {\n        if (!filtersLoaded) dispatch(fetchFilters());\n    }, [filtersLoaded, dispatch]);\n\n    if (!filtersLoaded) return <LoadingComponent message='Loading products...' />\n\n    return (\n        <Grid container columnSpacing={4}>\n            <Grid item xs={3}>\n                <Paper sx={{ mb: 2 }}>\n                    <ProductSearch />\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <RadioButtonGroup\n                        selectedValue={productParams.orderBy}\n                        options={sortOptions}\n                        onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\n                    />\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons\n                        items={brands}\n                        checked={productParams.brands}\n                        onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\n                    />\n                </Paper>\n                <Paper sx={{ mb: 2, p: 2 }}>\n                    <CheckboxButtons\n                        items={types}\n                        checked={productParams.types}\n                        onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\n                    />\n                </Paper>\n            </Grid>\n            <Grid item xs={9}>\n                <ProductList products={products} />\n            </Grid>\n            <Grid item xs={3} />\n            <Grid item xs={9} sx={{mb: 2}}>\n                {metaData &&\n                <AppPagination \n                    metaData={metaData}\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\n                />}\n            </Grid>\n        </Grid>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <Container component={Paper} sx={{height: 400}}>\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\n        </Container>\n    )\n}","import { LoadingButton } from \"@mui/lab\";\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport NotFound from \"../../app/errors/NotFound\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync, removeBasketItemAsync  } from \"../basket/basketSlice\";\nimport { fetchProductAsync, productSelectors } from \"./catalogSlice\";\n\nexport default function ProductDetails() {\n    const {basket, status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    const {id} = useParams<{id: string}>();\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\n    const {status: productStatus} = useAppSelector(state => state.catalog);\n    const [quantity, setQuantity] = useState(0);\n    const item = basket?.items.find(i => i.productId === product?.id);\n\n    useEffect(() => {\n        if (item) setQuantity(item.quantity);\n        if (!product) dispatch(fetchProductAsync(parseInt(id)))\n    }, [id, item, dispatch, product]);\n\n    function handleInputChange(event: any) {\n        if (event.target.value > 0) {\n            setQuantity(parseInt(event.target.value));\n        }\n    }\n\n    function handleUpdateCart() {\n        if (!item || quantity > item.quantity) {\n            const updatedQuantity = item ? quantity - item.quantity : quantity;\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        } else {\n            const updatedQuantity = item.quantity - quantity;\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n        }\n    }\n\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading product...' />\n\n    if (!product) return <NotFound />\n\n    return (\n        <Grid container spacing={6}>\n            <Grid item xs={6}>\n                <img src={product.pictureUrl} alt={product.name} style={{width: '100%'}} />\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant='h3'>{product.name}</Typography>\n                <Divider sx={{mb: 2}} />\n                <Typography variant='h4' color='secondary'>${(product.price / 100).toFixed(2)}</Typography>\n                <TableContainer>\n                    <Table>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>Name</TableCell>\n                                <TableCell>{product.name}</TableCell>\n                            </TableRow>    \n                            <TableRow>\n                                <TableCell>Description</TableCell>\n                                <TableCell>{product.description}</TableCell>\n                            </TableRow>  \n                            <TableRow>\n                                <TableCell>Type</TableCell>\n                                <TableCell>{product.type}</TableCell>\n                            </TableRow>  \n                            <TableRow>\n                                <TableCell>Brand</TableCell>\n                                <TableCell>{product.brand}</TableCell>\n                            </TableRow>  \n                            <TableRow>\n                                <TableCell>Quantity in stock</TableCell>\n                                <TableCell>{product.quantityInStock}</TableCell>\n                            </TableRow>  \n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <TextField \n                            variant='outlined'\n                            type='number'\n                            label='Quantity in Cart'\n                            fullWidth\n                            value={quantity}\n                            onChange={handleInputChange}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <LoadingButton\n                            disabled={item?.quantity === quantity}\n                            loading={status.includes('pending')}\n                            onClick={handleUpdateCart}\n                            sx={{height: '55px'}}\n                            color='primary'\n                            size='large'\n                            variant='contained'\n                            fullWidth\n                        >\n                            {item ? 'Update Quantity' : 'Add to Cart'}\n                        </LoadingButton>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { decrement, increment } from \"./counterSlice\";\n\nexport default function ContactPage() {\n    const dispatch = useAppDispatch();\n    const { data, title } = useAppSelector(state => state.counter);\n\n    return (\n        <>\n            <Typography variant='h2'>\n                {title}\n            </Typography>\n            <Typography variant='h5'>\n                The data is: {data}\n            </Typography>\n            <ButtonGroup>\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>Increment by 5</Button>\n            </ButtonGroup>\n        </>\n\n    )\n}","import { Box, Typography } from \"@mui/material\";\nimport Slider from \"react-slick\";\n\nexport default function HomePage() {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n    };\n\n    return (\n        <>\n            <Slider {...settings}>\n                <div>\n                    <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n                <div>\n                    <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: '100%', maxHeight: 500}} />\n                </div>\n            </Slider>\n            <Box display='flex' justifyContent='center' sx={{p: 4}} >\n                <Typography variant='h1'>Welcome to the store</Typography>\n            </Box>\n        </>\n    )\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function SignedInMenu() {\n    const dispatch = useAppDispatch();\n    const { user } = useAppSelector(state => state.account);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <>\n            <Button\n                color='inherit'\n                onClick={handleClick}\n                sx={{ typography: 'h6' }}\n            >\n                {user?.email}\n            </Button>\n            <Menu\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\n                <MenuItem onClick={() => {\n                    dispatch(signOut());\n                    dispatch(clearBasket());\n                }}>Logout</MenuItem>\n            </Menu>\n        </>\n    );\n}","import { ShoppingCart } from \"@mui/icons-material\";\nimport { AppBar, Badge, Box, IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\nimport SignedInMenu from \"./SignedInMenu\";\n\ninterface Props {\n    darkMode: boolean;\n    handleThemeChange: () => void;\n}\n\nconst midLinks = [\n    { title: 'catalog', path: '/catalog' },\n    { title: 'about', path: '/about' },\n    { title: 'contact', path: '/contact' }\n]\n\nconst rightLinks = [\n    { title: 'login', path: '/login' },\n    { title: 'register', path: '/register' }\n]\n\nconst navStyles = {\n    color: 'inherit',\n    textDecoration: 'none',\n    typography: 'h6',\n    '&:hover': {\n        color: 'grey.500'\n    },\n    '&.active': {\n        color: 'text.secondary'\n    }\n}\n\nexport default function Header({ darkMode, handleThemeChange }: Props) {\n    const { basket } = useAppSelector(state => state.basket);\n    const { user } = useAppSelector(state => state.account);\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0)\n\n    return (\n        <AppBar position='static'>\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <Box display='flex' alignItems='center'>\n                    <Typography variant='h6' component={NavLink} exact to='/'\n                        sx={navStyles}>\n                        RE-STORE\n                    </Typography>\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\n                </Box>\n                <List sx={{ display: 'flex' }}>\n                    {midLinks.map(({ title, path }) => (\n                        <ListItem\n                            component={NavLink}\n                            to={path}\n                            key={path}\n                            sx={navStyles}\n                        >\n                            {title.toUpperCase()}\n                        </ListItem>\n                    ))}\n                </List>\n                <Box display='flex' alignItems='center'>\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\n                        <Badge badgeContent={itemCount} color='secondary'>\n                            <ShoppingCart />\n                        </Badge>\n                    </IconButton>\n                    {user ? (\n                        <SignedInMenu />\n                    ) : (\n                        <List sx={{ display: 'flex' }}>\n                            {rightLinks.map(({ title, path }) => (\n                                <ListItem\n                                    component={NavLink}\n                                    to={path}\n                                    key={path}\n                                    sx={navStyles}\n                                >\n                                    {title.toUpperCase()}\n                                </ListItem>\n                            ))}\n                        </List>\n                    )}\n                </Box>\n            </Toolbar>\n        </AppBar>\n    )\n}","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router\";\n\nexport default function ServerError() {\n    const history = useHistory();\n    const { state } = useLocation<any>();\n\n    return (\n        <Container component={Paper}>\n            {state?.error ? (\n                <>\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\n                    <Divider />\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\n                </>\n            ) : (\n                <Typography variant='h5' gutterBottom>Server Error</Typography>\n            )}\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\n        </Container>\n    )\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from \"../../app/util/util\";\n\ninterface Props {\n    subtotal?: number;\n}\n\nexport default function BasketSummary({subtotal}: Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    if (subtotal === undefined)\n       subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[];\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({ items, isBasket = true }: Props) {\n    const { status } = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Product</TableCell>\n                        <TableCell align=\"right\">Price</TableCell>\n                        <TableCell align=\"center\">Quantity</TableCell>\n                        <TableCell align=\"right\">Subtotal</TableCell>\n                        {isBasket &&\n                            <TableCell align=\"right\"></TableCell>}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {items.map(item => (\n                        <TableRow\n                            key={item.productId}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                <Box display='flex' alignItems='center'>\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\n                                    <span>{item.name}</span>\n                                </Box>\n                            </TableCell>\n                            <TableCell align=\"right\">${(item.price / 100).toFixed(2)}</TableCell>\n                            <TableCell align=\"center\">\n                                {isBasket &&\n                                    <LoadingButton\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: 1, name: 'rem' }))}\n                                        color='error'\n                                    >\n                                        <Remove />\n                                    </LoadingButton>}\n                                {item.quantity}\n                                {isBasket &&\n                                    <LoadingButton\n                                        loading={status === 'pendingAddItem' + item.productId}\n                                        onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\n                                        color='secondary'\n                                    >\n                                        <Add />\n                                    </LoadingButton>}\n                            </TableCell>\n                            <TableCell align=\"right\">${((item.price / 100) * item.quantity).toFixed(2)}</TableCell>\n                            {isBasket &&\n                                <TableCell align=\"right\">\n                                    <LoadingButton\n                                        loading={status === 'pendingRemoveItem' + item.productId + 'del'}\n                                        onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\n                                        color='error'\n                                    >\n                                        <Delete />\n                                    </LoadingButton>\n                                </TableCell>}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport BasketSummary from \"./BasketSummary\";\nimport BasketTable from \"./BasketTable\";\n\nexport default function BasketPage() {\n    const { basket } = useAppSelector(state => state.basket);\n\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\n\n    return (\n        <>\n            <BasketTable items={basket.items} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary />\n                    <Button\n                        component={Link}\n                        to='/checkout'\n                        variant='contained'\n                        size='large'\n                        fullWidth\n                    >\n                        Checkout\n                    </Button>\n                </Grid>\n            </Grid>\n        </>\n\n    )\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { FieldValues, useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\nimport { signInUser } from './accountSlice';\n\nexport default function Login() {\n    const history = useHistory();\n    const location = useLocation<any>();\n    const dispatch = useAppDispatch();\n    const { register, handleSubmit, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    });\n\n    async function submitForm(data: FieldValues) {\n        try {\n            await dispatch(signInUser(data));\n            history.push(location.state?.from?.pathname ||  '/catalog');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Sign in\n            </Typography>\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Username\"\n                    autoFocus\n                    {...register('username', { required: 'Username is required' })}\n                    error={!!errors.username}\n                    helperText={errors?.username?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    {...register('password', { required: 'Password is required' })}\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                />\n                <LoadingButton\n                    disabled={!isValid}\n                    loading={isSubmitting}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Sign In\n                </LoadingButton>\n                <Grid container>\n                    <Grid item>\n                        <Link to='/register'>\n                            {\"Don't have an account? Sign Up\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\nexport default function Register() {\n    const history = useHistory();\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\n        mode: 'all'\n    });\n\n    function handleApiErrors(errors: any) {\n        if (errors) {\n            errors.forEach((error: string) => {\n                if (error.includes('Password')) {\n                    setError('password', { message: error })\n                } else if (error.includes('Email')) {\n                    setError('email', { message: error })\n                } else if (error.includes('Username')) {\n                    setError('username', { message: error })\n                }\n            });\n        }\n    }\n\n    return (\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Register\n            </Typography>\n            <Box component=\"form\"\n                onSubmit={handleSubmit((data) =>\n                    agent.Account.register(data)\n                        .then(() => {\n                            toast.success('Registration successful - you can now login');\n                            history.push('/login');\n                        })\n                        .catch(error => handleApiErrors(error))\n                )}\n                noValidate sx={{ mt: 1 }}\n            >\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Username\"\n                    autoFocus\n                    {...register('username', { required: 'Username is required' })}\n                    error={!!errors.username}\n                    helperText={errors?.username?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Email address\"\n                    {...register('email', { \n                        required: 'Email is required',\n                        pattern: {\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*)).[a-z]{2,3}$/,\n                            message: 'Not a valid email address'\n                        } \n                    })}\n                    error={!!errors.email}\n                    helperText={errors?.email?.message}\n                />\n                <TextField\n                    margin=\"normal\"\n                    fullWidth\n                    label=\"Password\"\n                    type=\"password\"\n                    {...register('password', { \n                        required: 'Password is required',\n                        pattern: {\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n                            message: 'Password is not complex enough'\n                        }\n                    })}\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                />\n                <LoadingButton\n                    disabled={!isValid}\n                    loading={isSubmitting}\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                >\n                    Register\n                </LoadingButton>\n                <Grid container>\n                    <Grid item>\n                        <Link to='/login'>\n                            {\"Already have an account? Sign In\"}\n                        </Link>\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n}","import { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n    const {user} = useAppSelector(state => state.account);\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          user ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n  ","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary subtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetailed from \"./OrderDetailed\";\n\nexport default function Orders() {\n    const [orders, setOrders] = useState<Order[] | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\n\n    useEffect(() => {\n        agent.Orders.list()\n            .then(orders => setOrders(orders))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }, [])\n\n    if (loading) return <LoadingComponent message='Loading orders' />\n\n    if (selectedOrderNumber > 0) return (\n        <OrderDetailed \n            order={orders?.find(o => o.id === selectedOrderNumber)!}\n            setSelectedOrder={setSelectedOrderNumber}\n        />\n    )\n\n    return (\n        <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Order number</TableCell>\n                        <TableCell align=\"right\">Total</TableCell>\n                        <TableCell align=\"right\">Order Date</TableCell>\n                        <TableCell align=\"right\">Order Status</TableCell>\n                        <TableCell align=\"right\"></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {orders?.map((order) => (\n                        <TableRow\n                            key={order.id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {order.id}\n                            </TableCell>\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                            <TableCell align=\"right\">\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\n                                    View\n                                </Button>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n        <TextField \n            {...props}\n            {...field}\n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\"\n\ninterface Props extends UseControllerProps {\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n    const {field} = useController({...props, defaultValue: false});\n    return (\n        <FormControlLabel \n            control={\n                <Checkbox \n                    {...field}\n                    checked={field.value}\n                    color='secondary'\n                    disabled={props.disabled}\n                />\n            }\n            label={props.label}\n        />\n    )\n}","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport AppCheckbox from '../../app/components/AppCheckbox';\n\nexport default function AddressForm() {\n    const { control, formState } = useFormContext();\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>\n                Shipping address\n            </Typography>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={12}>\n                    <AppTextInput control={control} name='fullName' label='Full name' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput control={control} name='address1' label='Address line 1' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppTextInput control={control} name='address2' label='Address line 2' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='city' label='City' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='state' label='State' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='zip' label='Zipcode' />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AppTextInput control={control} name='country' label='Country' />\n                </Grid>\n                <Grid item xs={12}>\n                    <AppCheckbox \n                        disabled={!formState.isDirty}\n                        name='saveAddress' \n                        label='Save this as the default address' \n                        control={control} \n                    />\n                </Grid>\n            </Grid>\n        </>\n    );\n}","import { InputBaseComponentProps } from \"@mui/material\";\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\n\ninterface Props extends InputBaseComponentProps {}\n\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, \n    ref: Ref<unknown>){\n        const elementRef = useRef<any>();\n\n        useImperativeHandle(ref, () => ({\n            focus: () => elementRef.current.focus\n        }));\n\n        return (\n            <Component \n                onReady={(element: any) => elementRef.current = element}\n                {...props}\n            />\n        )\n    });","import Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\nimport { StripeInput } from './StripeInput';\nimport { StripeElementType } from '@stripe/stripe-js';\n\ninterface Props {\n  cardState: { elementError: { [key in StripeElementType]?: string } };\n  onCardInputChange: (event: any) => void;\n}\n\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\n  const { control } = useFormContext();\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AppTextInput name='nameOnCard' label='Name on card' control={control} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardNumber}\n            helperText={cardState.elementError.cardNumber}\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardNumberElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardExpiry}\n            helperText={cardState.elementError.cardExpiry}\n            id=\"expDate\"\n            label=\"Expiry date\"\n            fullWidth\n            autoComplete=\"cc-exp\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardExpiryElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n            onChange={onCardInputChange}\n            error={!!cardState.elementError.cardCvc}\n            helperText={cardState.elementError.cardCvc}\n            id=\"cvv\"\n            label=\"CVV\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n            variant=\"outlined\"\n            InputLabelProps={{ shrink: true }}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardCvcElement\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}","import { Grid } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\nexport default function Review() {\n  const {basket} = useAppSelector(state => state.basket);\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket &&\n      <BasketTable items={basket.items} isBasket={false} />}\n      <Grid container>\n        <Grid item xs={6} />\n        <Grid item xs={6}>\n          <BasketSummary />\n        </Grid>\n      </Grid>\n    </>\n  );\n}","import * as yup from 'yup';\n\nexport const validationSchema = [\n    yup.object({\n        fullName: yup.string().required('Full name is required'),\n        address1: yup.string().required('Addres line 1 is required'),\n        address2: yup.string().required(),\n        city: yup.string().required(),\n        state: yup.string().required(),\n        zip: yup.string().required(),\n        country: yup.string().required(),\n    }),\n    yup.object(),\n    yup.object({\n        nameOnCard: yup.string().required()\n    })\n] ","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { validationSchema } from \"./checkoutValidation\";\nimport agent from \"../../app/api/agent\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { StripeElementType } from \"@stripe/stripe-js\";\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\nexport default function CheckoutPage() {\n    const [activeStep, setActiveStep] = useState(0);\n    const [orderNumber, setOrderNumber] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const dispatch = useAppDispatch();\n    const [cardState, setCardState] = useState<{ elementError: { [key in StripeElementType]?: string } }>({ elementError: {} });\n    const [cardComplete, setCardComplete] = useState<any>({ cardNumber: false, cardExpiry: false, cardCvc: false });\n    const [paymentMessage, setPaymentMessage] = useState('');\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\n    const { basket } = useAppSelector(state => state.basket);\n    const stripe = useStripe();\n    const elements = useElements();\n\n    function onCardInputChange(event: any) {\n        setCardState({\n            ...cardState,\n            elementError: {\n                ...cardState.elementError,\n                [event.elementType]: event.error?.message\n            }\n        })\n        setCardComplete({ ...cardComplete, [event.elementType]: event.complete });\n    }\n\n    function getStepContent(step: number) {\n        switch (step) {\n            case 0:\n                return <AddressForm />;\n            case 1:\n                return <Review />;\n            case 2:\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\n            default:\n                throw new Error('Unknown step');\n        }\n    }\n\n    const currentValidationSchema = validationSchema[activeStep];\n\n    const methods = useForm({\n        mode: 'all',\n        resolver: yupResolver(currentValidationSchema)\n    });\n\n    useEffect(() => {\n        agent.Account.fetchAddress()\n            .then(response => {\n                if (response) {\n                    methods.reset({ ...methods.getValues(), ...response, saveAddress: false })\n                }\n            })\n    }, [methods])\n\n    async function submitOrder(data: FieldValues) {\n        setLoading(true);\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\n        if (!stripe || !elements) return; // stripe not ready\n        try {\n            const cardElement = elements.getElement(CardNumberElement);\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n                payment_method: {\n                    card: cardElement!,\n                    billing_details: {\n                        name: nameOnCard\n                    }\n                }\n            });\n            console.log(paymentResult);\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\n                setOrderNumber(orderNumber);\n                setPaymentSucceeded(true);\n                setPaymentMessage('Thank you - we have received your payment');\n                setActiveStep(activeStep + 1);\n                dispatch(clearBasket());\n                setLoading(false);\n            } else {\n                setPaymentMessage(paymentResult.error?.message!);\n                setPaymentSucceeded(false);\n                setLoading(false);\n                setActiveStep(activeStep + 1);\n            }\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    }\n\n\n    const handleNext = async (data: FieldValues) => {\n        if (activeStep === steps.length - 1) {\n            await submitOrder(data);\n        } else {\n            setActiveStep(activeStep + 1);\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    function submitDisabled(): boolean {\n        if (activeStep === steps.length - 1) {\n            return !cardComplete.cardCvc\n                || !cardComplete.cardExpiry\n                || !cardComplete.cardNumber\n                || !methods.formState.isValid\n        } else {\n            return !methods.formState.isValid\n        }\n    }\n\n    return (\n        <FormProvider {...methods}>\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                    Checkout\n                </Typography>\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n                    {steps.map((label) => (\n                        <Step key={label}>\n                            <StepLabel>{label}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <>\n                    {activeStep === steps.length ? (\n                        <>\n                            <Typography variant=\"h5\" gutterBottom>\n                                {paymentMessage}\n                            </Typography>\n                            {paymentSucceeded ? (\n                                <Typography variant=\"subtitle1\">\n                                    Your order number is #{orderNumber}. We have not emailed your order\n                                    confirmation, and will not send you an update when your order has\n                                    shipped as this is a fake store!\n                                </Typography>\n                            ) : (\n                                <Button variant='contained' onClick={handleBack}>\n                                    Go back and try again\n                                </Button>\n                            )}\n\n                        </>\n                    ) : (\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\n                            {getStepContent(activeStep)}\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                                {activeStep !== 0 && (\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                                        Back\n                                    </Button>\n                                )}\n                                <LoadingButton\n                                    loading={loading}\n                                    disabled={submitDisabled()}\n                                    variant=\"contained\"\n                                    type='submit'\n                                    sx={{ mt: 3, ml: 1 }}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                                </LoadingButton>\n                            </Box>\n                        </form>\n                    )}\n                </>\n            </Paper>\n        </FormProvider>\n\n    );\n}\n","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe(\"pk_test_51IzwHFErFg8RLNropkfWpnL37TzyR3eTpn0vY0EmatAeBwxlNPFJT2e2VtfIt2V8975y2W7kC1gcQ5tB5B332Y2x00yktsLIxN\")\n\nexport default function CheckoutWrapper() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        agent.Payments.createPaymentIntent()\n            .then(basket => dispatch(setBasket(basket)))\n            .catch(error => console.log(error))\n            .finally(() => setLoading(false));\n    }, [dispatch]);\n\n    if (loading) return <LoadingComponent message='Loading checkout...' />\n\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutPage />\n        </Elements>\n    )\n}","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutPage from \"../../features/about/AboutPage\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactPage from \"../../features/contact/ContactPage\";\nimport HomePage from \"../../features/home/HomePage\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Login from \"../../features/account/Login\";\nimport Register from \"../../features/account/Register\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp])\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light'\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212'\n      }\n    }\n  })\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initialising app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container  sx={{ mt: 4 }}>\n          <Switch>\n            <Route exact path='/catalog' component={Catalog} />\n            <Route path='/catalog/:id' component={ProductDetails} />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/contact' component={ContactPage} />\n            <Route path='/server-error' component={ServerError} />\n            <Route path='/basket' component={BasketPage} />\n            <PrivateRoute path='/checkout' component={CheckoutWrapper} />\n            <PrivateRoute path='/orders' component={Orders} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}